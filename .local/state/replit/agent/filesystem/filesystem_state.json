{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Knowledge Wave India - Learning Platform\n\n## Overview\n\nKnowledge Wave India is a comprehensive online learning platform built with a modern full-stack architecture. The application provides courses, learning packages, instructor profiles, and educational content management. It features a React-based frontend with TypeScript, Express.js backend, and PostgreSQL database integration using Drizzle ORM. The platform supports course browsing, package enrollment, newsletter subscriptions, and contact management with a focus on educational content delivery.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development practices\n- **Routing**: Wouter for lightweight client-side routing instead of React Router\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **UI Framework**: Radix UI components with shadcn/ui design system for consistent, accessible components\n- **Styling**: Tailwind CSS with CSS variables for theming and responsive design\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Animations**: Framer Motion for smooth page transitions and interactive elements\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework for RESTful API development\n- **Language**: TypeScript for type safety across the entire stack\n- **API Design**: RESTful endpoints for courses, packages, instructors, enrollments, and newsletter subscriptions\n- **Error Handling**: Centralized error middleware with structured error responses\n- **Development**: Hot reload with Vite integration for seamless development experience\n\n### Data Storage Architecture\n- **Database**: PostgreSQL as the primary relational database\n- **ORM**: Drizzle ORM for type-safe database operations and schema management\n- **Schema**: Shared TypeScript schema definitions between frontend and backend\n- **Migrations**: Drizzle Kit for database schema migrations and version control\n- **Connection**: Neon Database serverless PostgreSQL for cloud-native scaling\n\n### Database Schema Design\n- **Users**: Authentication and profile management with unique constraints\n- **Courses**: Educational content with categorization, ratings, and instructor relationships\n- **Packages**: Bundled course offerings with pricing and feature lists\n- **Instructors**: Teacher profiles with expertise areas and ratings\n- **Enrollments**: Student-course registration tracking\n- **Newsletter**: Email subscription management for marketing communications\n\n### Authentication & Authorization\n- Currently implemented with placeholder user management\n- Session-based architecture prepared for future authentication integration\n- User ID tracking for enrollment and personalization features\n\n### Component Architecture\n- **Design System**: Consistent component library using Radix UI primitives\n- **Accessibility**: WCAG-compliant components with keyboard navigation and screen reader support\n- **Responsiveness**: Mobile-first design with adaptive layouts\n- **Reusability**: Modular component structure for maintainability\n\n## External Dependencies\n\n### Database Services\n- **Neon Database**: Serverless PostgreSQL hosting for scalable data storage\n- **Drizzle ORM**: Type-safe database toolkit for schema management and queries\n\n### UI/UX Libraries\n- **Radix UI**: Headless component primitives for accessible interface elements\n- **Tailwind CSS**: Utility-first CSS framework for rapid styling\n- **Framer Motion**: Production-ready motion library for React animations\n- **Lucide React**: Feather-inspired icon library for consistent iconography\n\n### Development Tools\n- **Vite**: Next-generation frontend build tool for development and production\n- **TypeScript**: Static type checking for improved code quality\n- **TanStack Query**: Powerful data synchronization for server state management\n\n### Form & Validation\n- **React Hook Form**: Performant forms library with minimal re-renders\n- **Zod**: TypeScript-first schema validation for data integrity\n- **Drizzle Zod**: Integration between Drizzle ORM and Zod for schema validation\n\n### Image & Asset Management\n- **Unsplash**: External image service for course thumbnails and marketing content\n- **Static Assets**: Local asset management through Vite's asset pipeline","size_bytes":4405},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertNewsletterSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Courses routes\n  app.get(\"/api/courses\", async (req, res) => {\n    try {\n      const { category, search } = req.query;\n      \n      let courses;\n      if (search) {\n        courses = await storage.searchCourses(search as string);\n      } else if (category) {\n        courses = await storage.getCoursesByCategory(category as string);\n      } else {\n        courses = await storage.getAllCourses();\n      }\n      \n      res.json(courses);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch courses\" });\n    }\n  });\n\n  app.get(\"/api/courses/:id\", async (req, res) => {\n    try {\n      const course = await storage.getCourse(req.params.id);\n      if (!course) {\n        return res.status(404).json({ message: \"Course not found\" });\n      }\n      res.json(course);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch course\" });\n    }\n  });\n\n  // Packages routes\n  app.get(\"/api/packages\", async (req, res) => {\n    try {\n      const packages = await storage.getAllPackages();\n      res.json(packages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch packages\" });\n    }\n  });\n\n  app.get(\"/api/packages/:id\", async (req, res) => {\n    try {\n      const pkg = await storage.getPackage(req.params.id);\n      if (!pkg) {\n        return res.status(404).json({ message: \"Package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch package\" });\n    }\n  });\n\n  // Instructors routes\n  app.get(\"/api/instructors\", async (req, res) => {\n    try {\n      const instructors = await storage.getAllInstructors();\n      res.json(instructors);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch instructors\" });\n    }\n  });\n\n  app.get(\"/api/instructors/:id\", async (req, res) => {\n    try {\n      const instructor = await storage.getInstructor(req.params.id);\n      if (!instructor) {\n        return res.status(404).json({ message: \"Instructor not found\" });\n      }\n      res.json(instructor);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch instructor\" });\n    }\n  });\n\n  // Newsletter subscription\n  app.post(\"/api/newsletter\", async (req, res) => {\n    try {\n      const validation = insertNewsletterSchema.safeParse(req.body);\n      if (!validation.success) {\n        return res.status(400).json({ message: \"Invalid email address\" });\n      }\n\n      const newsletter = await storage.subscribeNewsletter(validation.data.email);\n      res.json({ message: \"Successfully subscribed to newsletter\", newsletter });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to subscribe to newsletter\" });\n    }\n  });\n\n  // Enrollment routes\n  app.post(\"/api/enrollments\", async (req, res) => {\n    try {\n      const { userId, packageId, courseId } = req.body;\n      \n      if (!userId || (!packageId && !courseId)) {\n        return res.status(400).json({ message: \"Missing required fields\" });\n      }\n\n      const enrollment = await storage.createEnrollment({\n        userId,\n        packageId: packageId || null,\n        courseId: courseId || null,\n      });\n\n      res.json({ message: \"Successfully enrolled\", enrollment });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to create enrollment\" });\n    }\n  });\n\n  app.get(\"/api/users/:userId/enrollments\", async (req, res) => {\n    try {\n      const enrollments = await storage.getUserEnrollments(req.params.userId);\n      res.json(enrollments);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch enrollments\" });\n    }\n  });\n\n  // Contact form\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const { name, email, message, subject } = req.body;\n      \n      if (!name || !email || !message) {\n        return res.status(400).json({ message: \"Missing required fields\" });\n      }\n\n      // In a real app, you'd send an email or save to database\n      res.json({ message: \"Contact form submitted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to submit contact form\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":4451},"server/storage.ts":{"content":"import { type User, type InsertUser, type Course, type InsertCourse, type Package, type InsertPackage, type Instructor, type InsertInstructor, type Enrollment, type InsertEnrollment, type Newsletter, type InsertNewsletter } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n\n  // Courses\n  getAllCourses(): Promise<Course[]>;\n  getCourse(id: string): Promise<Course | undefined>;\n  createCourse(course: InsertCourse): Promise<Course>;\n  getCoursesByCategory(category: string): Promise<Course[]>;\n  searchCourses(query: string): Promise<Course[]>;\n\n  // Packages\n  getAllPackages(): Promise<Package[]>;\n  getPackage(id: string): Promise<Package | undefined>;\n  createPackage(pkg: InsertPackage): Promise<Package>;\n\n  // Instructors\n  getAllInstructors(): Promise<Instructor[]>;\n  getInstructor(id: string): Promise<Instructor | undefined>;\n  createInstructor(instructor: InsertInstructor): Promise<Instructor>;\n\n  // Enrollments\n  createEnrollment(enrollment: InsertEnrollment): Promise<Enrollment>;\n  getUserEnrollments(userId: string): Promise<Enrollment[]>;\n\n  // Newsletter\n  subscribeNewsletter(email: string): Promise<Newsletter>;\n  getNewsletterSubscriptions(): Promise<Newsletter[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private courses: Map<string, Course>;\n  private packages: Map<string, Package>;\n  private instructors: Map<string, Instructor>;\n  private enrollments: Map<string, Enrollment>;\n  private newsletters: Map<string, Newsletter>;\n\n  constructor() {\n    this.users = new Map();\n    this.courses = new Map();\n    this.packages = new Map();\n    this.instructors = new Map();\n    this.enrollments = new Map();\n    this.newsletters = new Map();\n    \n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize sample courses\n    const sampleCourses: Course[] = [\n      {\n        id: \"1\",\n        title: \"10 ways to grow your Youtube\",\n        description: \"Master YouTube growth strategies with proven techniques\",\n        thumbnail: \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Development\",\n        instructorId: \"1\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"2\",\n        title: \"Adobe Photoshop\",\n        description: \"Complete Photoshop mastery from beginner to expert\",\n        thumbnail: \"https://images.unsplash.com/photo-1586717791821-3f44a563fa4c?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Design\",\n        instructorId: \"2\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"3\",\n        title: \"Adobe Premiere Pro\",\n        description: \"Professional video editing with Adobe Premiere Pro\",\n        thumbnail: \"https://images.unsplash.com/photo-1574717024653-61fd2cf4d44d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Design\",\n        instructorId: \"3\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"4\",\n        title: \"Advance WordPress\",\n        description: \"Advanced WordPress development and customization\",\n        thumbnail: \"https://images.unsplash.com/photo-1432888622747-4eb9a8efeb07?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Development\",\n        instructorId: \"4\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"5\",\n        title: \"Business Negotiation\",\n        description: \"Master the art of business negotiations\",\n        thumbnail: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Business\",\n        instructorId: \"5\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"6\",\n        title: \"Canva Mastery\",\n        description: \"Create stunning designs with Canva\",\n        thumbnail: \"https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Design\",\n        instructorId: \"6\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"7\",\n        title: \"Content Creation\",\n        description: \"Master content creation strategies\",\n        thumbnail: \"https://images.unsplash.com/photo-1504384308090-c894fdcc538d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 5,\n        rating: \"4.8\",\n        category: \"Marketing\",\n        instructorId: \"7\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"8\",\n        title: \"Excel Course\",\n        description: \"Master Excel for data analysis and business\",\n        thumbnail: \"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\",\n        lessons: 10,\n        rating: \"4.8\",\n        category: \"Business\",\n        instructorId: \"8\",\n        createdAt: new Date(),\n      },\n    ];\n\n    // Initialize sample packages\n    const samplePackages: Package[] = [\n      {\n        id: \"grow-wave\",\n        title: \"Grow Wave\",\n        description: \"Perfect for beginners starting their learning journey\",\n        image: \"https://images.unsplash.com/photo-1553484771-371a605b060b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n        originalPrice: \"3000.00\",\n        discountedPrice: \"2000.00\",\n        category: \"Development\",\n        rating: \"4.8\",\n        features: [\"Access to 5 courses\", \"Basic support\", \"Certificate of completion\"],\n        courseIds: [\"1\", \"2\", \"3\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"expert-wave\",\n        title: \"Expert Wave\",\n        description: \"Intermediate level package for skill enhancement\",\n        image: \"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n        originalPrice: \"4500.00\",\n        discountedPrice: \"4000.00\",\n        category: \"Development\",\n        rating: \"4.8\",\n        features: [\"Access to 8 courses\", \"Priority support\", \"Certificate of completion\", \"Live Q&A sessions\"],\n        courseIds: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"finance-wave\",\n        title: \"Finance Wave\",\n        description: \"Comprehensive financial education package\",\n        image: \"https://images.unsplash.com/photo-1554224155-6726b3ff858f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n        originalPrice: \"7500.00\",\n        discountedPrice: \"6700.00\",\n        category: \"Finance\",\n        rating: \"4.8\",\n        features: [\"Finance-focused courses\", \"Expert mentorship\", \"Real-world projects\", \"Industry certification\"],\n        courseIds: [\"5\", \"8\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"creator-wave\",\n        title: \"Creator Wave\",\n        description: \"Perfect for content creators and digital marketers\",\n        image: \"https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n        originalPrice: \"15800.00\",\n        discountedPrice: \"13500.00\",\n        category: \"Creative\",\n        rating: \"4.8\",\n        features: [\"Complete creator toolkit\", \"Advanced design courses\", \"Marketing strategies\", \"1-on-1 mentorship\"],\n        courseIds: [\"2\", \"3\", \"6\", \"7\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"tech-wave\",\n        title: \"Tech Wave\",\n        description: \"Comprehensive technology training package\",\n        image: \"https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\",\n        originalPrice: \"23000.00\",\n        discountedPrice: \"20000.00\",\n        category: \"Technology\",\n        rating: \"4.8\",\n        features: [\"All technology courses\", \"Premium support\", \"Industry projects\", \"Job placement assistance\"],\n        courseIds: [\"1\", \"4\", \"8\"],\n        createdAt: new Date(),\n      },\n    ];\n\n    // Initialize sample instructors\n    const sampleInstructors: Instructor[] = [\n      {\n        id: \"1\",\n        name: \"Kartik Kaushik\",\n        title: \"Digital Marketing Expert\",\n        bio: \"Expert in digital marketing with 10+ years of experience\",\n        avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Digital Marketing\", \"YouTube Growth\", \"Social Media\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"2\",\n        name: \"Harsh Vikal\",\n        title: \"Business Consultant\",\n        bio: \"Business strategy and consulting expert\",\n        avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Business Strategy\", \"Consulting\", \"Leadership\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"3\",\n        name: \"Sumit Sengar\",\n        title: \"Sales Coach\",\n        bio: \"Professional sales trainer and coach\",\n        avatar: \"https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Sales Training\", \"Negotiation\", \"Communication\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"4\",\n        name: \"Ujjawal Tilwani\",\n        title: \"Life Coach\",\n        bio: \"Personal development and life coaching expert\",\n        avatar: \"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Life Coaching\", \"Personal Development\", \"Motivation\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"5\",\n        name: \"Ayush Parmar\",\n        title: \"Content Creator\",\n        bio: \"Creative content strategist and creator\",\n        avatar: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Content Creation\", \"Social Media\", \"Branding\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"6\",\n        name: \"Sagar Poonia\",\n        title: \"Public Speaker\",\n        bio: \"Professional public speaking trainer\",\n        avatar: \"https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Public Speaking\", \"Presentation Skills\", \"Communication\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"7\",\n        name: \"Rhythm Vij\",\n        title: \"Actor\",\n        bio: \"Professional actor and performance coach\",\n        avatar: \"https://images.unsplash.com/photo-1463453091185-61582044d556?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Acting\", \"Performance\", \"Creative Arts\"],\n        createdAt: new Date(),\n      },\n      {\n        id: \"8\",\n        name: \"Naman Kapoor\",\n        title: \"Content Creator\",\n        bio: \"Digital content specialist and strategist\",\n        avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\",\n        rating: \"4.8\",\n        expertise: [\"Content Strategy\", \"Digital Marketing\", \"Brand Building\"],\n        createdAt: new Date(),\n      },\n    ];\n\n    // Populate data\n    sampleCourses.forEach(course => this.courses.set(course.id, course));\n    samplePackages.forEach(pkg => this.packages.set(pkg.id, pkg));\n    sampleInstructors.forEach(instructor => this.instructors.set(instructor.id, instructor));\n  }\n\n  // User methods\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.username === username);\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.email === email);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id, createdAt: new Date() };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Course methods\n  async getAllCourses(): Promise<Course[]> {\n    return Array.from(this.courses.values());\n  }\n\n  async getCourse(id: string): Promise<Course | undefined> {\n    return this.courses.get(id);\n  }\n\n  async createCourse(insertCourse: InsertCourse): Promise<Course> {\n    const id = randomUUID();\n    const course: Course = { ...insertCourse, id, createdAt: new Date() };\n    this.courses.set(id, course);\n    return course;\n  }\n\n  async getCoursesByCategory(category: string): Promise<Course[]> {\n    return Array.from(this.courses.values()).filter(course => course.category === category);\n  }\n\n  async searchCourses(query: string): Promise<Course[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.courses.values()).filter(course => \n      course.title.toLowerCase().includes(lowercaseQuery) ||\n      course.description?.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  // Package methods\n  async getAllPackages(): Promise<Package[]> {\n    return Array.from(this.packages.values());\n  }\n\n  async getPackage(id: string): Promise<Package | undefined> {\n    return this.packages.get(id);\n  }\n\n  async createPackage(insertPackage: InsertPackage): Promise<Package> {\n    const id = randomUUID();\n    const pkg: Package = { ...insertPackage, id, createdAt: new Date() };\n    this.packages.set(id, pkg);\n    return pkg;\n  }\n\n  // Instructor methods\n  async getAllInstructors(): Promise<Instructor[]> {\n    return Array.from(this.instructors.values());\n  }\n\n  async getInstructor(id: string): Promise<Instructor | undefined> {\n    return this.instructors.get(id);\n  }\n\n  async createInstructor(insertInstructor: InsertInstructor): Promise<Instructor> {\n    const id = randomUUID();\n    const instructor: Instructor = { ...insertInstructor, id, createdAt: new Date() };\n    this.instructors.set(id, instructor);\n    return instructor;\n  }\n\n  // Enrollment methods\n  async createEnrollment(insertEnrollment: InsertEnrollment): Promise<Enrollment> {\n    const id = randomUUID();\n    const enrollment: Enrollment = { ...insertEnrollment, id, enrolledAt: new Date() };\n    this.enrollments.set(id, enrollment);\n    return enrollment;\n  }\n\n  async getUserEnrollments(userId: string): Promise<Enrollment[]> {\n    return Array.from(this.enrollments.values()).filter(enrollment => enrollment.userId === userId);\n  }\n\n  // Newsletter methods\n  async subscribeNewsletter(email: string): Promise<Newsletter> {\n    const existing = Array.from(this.newsletters.values()).find(sub => sub.email === email);\n    if (existing) {\n      return existing;\n    }\n    \n    const id = randomUUID();\n    const newsletter: Newsletter = { id, email, subscribedAt: new Date() };\n    this.newsletters.set(id, newsletter);\n    return newsletter;\n  }\n\n  async getNewsletterSubscriptions(): Promise<Newsletter[]> {\n    return Array.from(this.newsletters.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":15488},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const courses = pgTable(\"courses\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  thumbnail: text(\"thumbnail\"),\n  lessons: integer(\"lessons\").default(0),\n  rating: decimal(\"rating\", { precision: 2, scale: 1 }).default(\"4.8\"),\n  category: text(\"category\").default(\"Development\"),\n  instructorId: varchar(\"instructor_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const packages = pgTable(\"packages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  image: text(\"image\"),\n  originalPrice: decimal(\"original_price\", { precision: 10, scale: 2 }),\n  discountedPrice: decimal(\"discounted_price\", { precision: 10, scale: 2 }),\n  category: text(\"category\").default(\"Development\"),\n  rating: decimal(\"rating\", { precision: 2, scale: 1 }).default(\"4.8\"),\n  features: text(\"features\").array(),\n  courseIds: text(\"course_ids\").array(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const instructors = pgTable(\"instructors\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  title: text(\"title\").notNull(),\n  bio: text(\"bio\"),\n  avatar: text(\"avatar\"),\n  rating: decimal(\"rating\", { precision: 2, scale: 1 }).default(\"4.8\"),\n  expertise: text(\"expertise\").array(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const enrollments = pgTable(\"enrollments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull(),\n  packageId: varchar(\"package_id\"),\n  courseId: varchar(\"course_id\"),\n  enrolledAt: timestamp(\"enrolled_at\").defaultNow(),\n});\n\nexport const newsletters = pgTable(\"newsletters\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  subscribedAt: timestamp(\"subscribed_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCourseSchema = createInsertSchema(courses).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertPackageSchema = createInsertSchema(packages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInstructorSchema = createInsertSchema(instructors).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertEnrollmentSchema = createInsertSchema(enrollments).omit({\n  id: true,\n  enrolledAt: true,\n});\n\nexport const insertNewsletterSchema = createInsertSchema(newsletters).omit({\n  id: true,\n  subscribedAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type Course = typeof courses.$inferSelect;\nexport type InsertCourse = z.infer<typeof insertCourseSchema>;\n\nexport type Package = typeof packages.$inferSelect;\nexport type InsertPackage = z.infer<typeof insertPackageSchema>;\n\nexport type Instructor = typeof instructors.$inferSelect;\nexport type InsertInstructor = z.infer<typeof insertInstructorSchema>;\n\nexport type Enrollment = typeof enrollments.$inferSelect;\nexport type InsertEnrollment = z.infer<typeof insertEnrollmentSchema>;\n\nexport type Newsletter = typeof newsletters.$inferSelect;\nexport type InsertNewsletter = z.infer<typeof insertNewsletterSchema>;\n","size_bytes":3979},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Courses from \"@/pages/courses\";\nimport Packages from \"@/pages/packages\";\nimport PackageDetail from \"@/pages/package-detail\";\nimport CourseDetail from \"@/pages/course-detail\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport Login from \"@/pages/login\";\nimport Register from \"@/pages/register\";\nimport Navbar from \"@/components/navbar\";\nimport Footer from \"@/components/footer\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/courses\" component={Courses} />\n      <Route path=\"/courses/:id\" component={CourseDetail} />\n      <Route path=\"/packages\" component={Packages} />\n      <Route path=\"/packages/:id\" component={PackageDetail} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <div className=\"min-h-screen flex flex-col\">\n          <Navbar />\n          <main className=\"flex-1\">\n            <Router />\n          </main>\n          <Footer />\n        </div>\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1715},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(16, 100%, 60%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(142, 76%, 36%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(20, 14.3%, 4.1%);\n  --radius: 0.5rem;\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .gradient-bg {\n    background: linear-gradient(135deg, hsl(207, 90%, 54%) 0%, hsl(207, 90%, 44%) 100%);\n  }\n  \n  .gradient-secondary {\n    background: linear-gradient(135deg, hsl(16, 100%, 60%) 0%, hsl(16, 100%, 50%) 100%);\n  }\n\n  .card-hover {\n    @apply transition-all duration-300 ease-in-out;\n  }\n  \n  .card-hover:hover {\n    @apply transform -translate-y-2 shadow-2xl;\n  }\n\n  .animate-fade-in {\n    animation: fadeIn 0.8s ease-in-out;\n  }\n\n  .animate-slide-up {\n    animation: slideUp 0.6s ease-out;\n  }\n\n  .animate-pulse-slow {\n    animation: pulse 3s infinite;\n  }\n\n  .text-gradient {\n    background: linear-gradient(135deg, hsl(207, 90%, 54%), hsl(16, 100%, 60%));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(60, 4.8%, 95.9%);\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(207, 90%, 54%);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(207, 90%, 44%);\n}\n\n/* Mobile menu animation */\n.mobile-menu-enter {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n.mobile-menu-enter-active {\n  opacity: 1;\n  transform: translateY(0);\n  transition: opacity 300ms, transform 300ms;\n}\n\n.mobile-menu-exit {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.mobile-menu-exit-active {\n  opacity: 0;\n  transform: translateY(-10px);\n  transition: opacity 300ms, transform 300ms;\n}\n\n/* Intersection observer animations */\n.fade-in-up {\n  opacity: 0;\n  transform: translateY(30px);\n  transition: opacity 0.6s ease, transform 0.6s ease;\n}\n\n.fade-in-up.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.fade-in-left {\n  opacity: 0;\n  transform: translateX(-30px);\n  transition: opacity 0.6s ease, transform 0.6s ease;\n}\n\n.fade-in-left.visible {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.fade-in-right {\n  opacity: 0;\n  transform: translateX(30px);\n  transition: opacity 0.6s ease, transform 0.6s ease;\n}\n\n.fade-in-right.visible {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n/* Counter animation */\n.counter {\n  font-variant-numeric: tabular-nums;\n}\n\n/* Hero text animation */\n.hero-text {\n  background: linear-gradient(135deg, #ffffff 0%, #f0f9ff 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* Package card special styling */\n.package-card {\n  background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);\n  border: 1px solid hsl(20, 5.9%, 90%);\n}\n\n.package-card:hover {\n  background: linear-gradient(145deg, #ffffff 0%, #f1f5f9 100%);\n  border-color: hsl(207, 90%, 54%);\n}\n\n/* Newsletter section styling */\n.newsletter-bg {\n  background: linear-gradient(135deg, hsl(207, 90%, 54%) 0%, hsl(207, 90%, 44%) 50%, hsl(16, 100%, 60%) 100%);\n}\n\n/* FAQ accordion styling */\n.faq-content {\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n}\n\n.faq-content.open {\n  max-height: 200px;\n}\n\n/* Instructor card hover effects */\n.instructor-card {\n  background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);\n  transition: all 0.3s ease;\n}\n\n.instructor-card:hover {\n  background: linear-gradient(145deg, #f8fafc 0%, #f1f5f9 100%);\n  transform: translateY(-5px);\n}\n\n/* Button styling enhancements */\n.btn-primary {\n  background: linear-gradient(135deg, hsl(207, 90%, 54%) 0%, hsl(207, 90%, 44%) 100%);\n  box-shadow: 0 4px 15px 0 rgba(59, 130, 246, 0.3);\n  transition: all 0.3s ease;\n}\n\n.btn-primary:hover {\n  background: linear-gradient(135deg, hsl(207, 90%, 44%) 0%, hsl(207, 90%, 34%) 100%);\n  box-shadow: 0 6px 20px 0 rgba(59, 130, 246, 0.4);\n  transform: translateY(-2px);\n}\n\n.btn-secondary {\n  background: linear-gradient(135deg, hsl(16, 100%, 60%) 0%, hsl(16, 100%, 50%) 100%);\n  box-shadow: 0 4px 15px 0 rgba(255, 107, 53, 0.3);\n  transition: all 0.3s ease;\n}\n\n.btn-secondary:hover {\n  background: linear-gradient(135deg, hsl(16, 100%, 50%) 0%, hsl(16, 100%, 40%) 100%);\n  box-shadow: 0 6px 20px 0 rgba(255, 107, 53, 0.4);\n  transform: translateY(-2px);\n}\n\n/* Course card styling */\n.course-card {\n  background: #ffffff;\n  border: 1px solid hsl(20, 5.9%, 90%);\n  transition: all 0.3s ease;\n}\n\n.course-card:hover {\n  border-color: hsl(207, 90%, 54%);\n  box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.1);\n}\n\n/* Statistics section styling */\n.stats-section {\n  background: linear-gradient(135deg, hsl(207, 90%, 54%) 0%, hsl(207, 90%, 44%) 50%, hsl(16, 100%, 60%) 100%);\n}\n\n/* Loading spinner */\n.spinner {\n  border: 3px solid hsl(60, 4.8%, 95.9%);\n  border-top: 3px solid hsl(207, 90%, 54%);\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Form styling */\n.form-input {\n  border: 2px solid hsl(20, 5.9%, 90%);\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.form-input:focus {\n  border-color: hsl(207, 90%, 54%);\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n/* Brand logo hover effects */\n.brand-logo {\n  filter: grayscale(100%);\n  opacity: 0.6;\n  transition: all 0.3s ease;\n}\n\n.brand-logo:hover {\n  filter: grayscale(0%);\n  opacity: 1;\n}\n","size_bytes":7482},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/courses-grid.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Star, Clock, Users, Search } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport type { Course } from \"@shared/schema\";\n\ninterface CoursesGridProps {\n  title?: string;\n  subtitle?: string;\n  showSearch?: boolean;\n  limit?: number;\n  showViewAll?: boolean;\n}\n\nexport default function CoursesGrid({ \n  title = \"Top Courses We Have\",\n  subtitle = \"Explore our most popular and sought-after courses designed to elevate your skills and knowledge.\",\n  showSearch = false,\n  limit,\n  showViewAll = false\n}: CoursesGridProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  const { data: courses = [], isLoading } = useQuery<Course[]>({\n    queryKey: [\"/api/courses\", selectedCategory, searchQuery],\n  });\n\n  const filteredCourses = limit ? courses.slice(0, limit) : courses;\n\n  const categories = [\"All\", \"Development\", \"Design\", \"Business\", \"Marketing\"];\n\n  if (isLoading) {\n    return (\n      <div className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {[...Array(8)].map((_, i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"bg-neutral-200 h-48 rounded-t-xl\" />\n                <div className=\"p-6 space-y-3\">\n                  <div className=\"h-4 bg-neutral-200 rounded\" />\n                  <div className=\"h-4 bg-neutral-200 rounded w-3/4\" />\n                  <div className=\"h-10 bg-neutral-200 rounded\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-white\" data-testid=\"courses-grid\">\n      <div className=\"container mx-auto px-4\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h3 className=\"text-secondary text-lg font-semibold mb-2\">Trending Courses</h3>\n          <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"courses-title\">\n            {title}\n          </h2>\n          <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"courses-subtitle\">\n            {subtitle}\n          </p>\n        </motion.div>\n\n        {/* Search and Filters */}\n        {showSearch && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            viewport={{ once: true }}\n            className=\"mb-12\"\n          >\n            <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\n              <div className=\"relative flex-1\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search courses...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10 form-input\"\n                  data-testid=\"course-search-input\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex flex-wrap gap-2\">\n              {categories.map((category) => (\n                <Button\n                  key={category}\n                  variant={selectedCategory === category || (category === \"All\" && !selectedCategory) ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category === \"All\" ? \"\" : category)}\n                  className=\"transition-all\"\n                  data-testid={`category-filter-${category.toLowerCase()}`}\n                >\n                  {category}\n                </Button>\n              ))}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Courses Grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {filteredCourses.map((course, index) => (\n            <motion.div\n              key={course.id}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"course-card card-hover h-full\" data-testid={`course-card-${course.id}`}>\n                <div className=\"relative\">\n                  <img\n                    src={course.thumbnail || \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\"}\n                    alt={course.title}\n                    className=\"w-full h-48 object-cover rounded-t-xl\"\n                    data-testid={`course-image-${course.id}`}\n                  />\n                  <Badge className=\"absolute top-3 left-3 bg-primary text-white\">\n                    {course.category}\n                  </Badge>\n                </div>\n                \n                <CardContent className=\"p-6\">\n                  <h4 className=\"font-bold text-lg mb-2 line-clamp-2\" data-testid={`course-title-${course.id}`}>\n                    {course.title}\n                  </h4>\n                  \n                  <div className=\"flex items-center justify-between mb-4 text-sm text-neutral-600\">\n                    <div className=\"flex items-center gap-1\">\n                      <Clock size={14} />\n                      <span data-testid={`course-lessons-${course.id}`}>{course.lessons} Lessons</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Star className=\"text-yellow-400 fill-current\" size={14} />\n                      <span data-testid={`course-rating-${course.id}`}>{course.rating}</span>\n                    </div>\n                  </div>\n                  \n                  <Link href={`/courses/${course.id}`}>\n                    <Button \n                      className=\"w-full btn-primary text-white\"\n                      data-testid={`course-enroll-${course.id}`}\n                    >\n                      Enroll Now\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* View All Button */}\n        {showViewAll && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mt-12\"\n          >\n            <Link href=\"/courses\">\n              <Button size=\"lg\" variant=\"outline\" className=\"px-8\" data-testid=\"view-all-courses\">\n                View All Courses\n              </Button>\n            </Link>\n          </motion.div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":7365},"client/src/components/faq-section.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ChevronDown } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\ninterface FAQItem {\n  question: string;\n  answer: string;\n}\n\nconst faqData: FAQItem[] = [\n  {\n    question: \"What is Knowledge Wave India?\",\n    answer: \"Knowledge Wave India is an online platform that offers digital courses and skill based trainings to help individuals enhance their skills and knowledge in all the fields relevant in today's time.\"\n  },\n  {\n    question: \"What payment methods do you accept?\",\n    answer: \"We accept various payment methods, including major credit cards, debit cards, and online payment platforms. Simply choose your preferred payment method during the checkout process.\"\n  },\n  {\n    question: \"Is my payment information secure?\",\n    answer: \"Yes, we take the security of your payment information seriously. We use industry-standard encryption and secure payment gateways to ensure that your payment details are protected.\"\n  },\n  {\n    question: \"Can I contact support if I have questions or issues?\",\n    answer: \"Absolutely! We have a dedicated support team ready to assist you. If you have any questions, technical difficulties, or require assistance, you can reach out to our support team through the contact information provided on our website.\"\n  },\n  {\n    question: \"Do you offer certificates upon course completion?\",\n    answer: \"Yes, we provide certificates for all completed courses. These certificates can be downloaded and shared on professional networks like LinkedIn to showcase your new skills.\"\n  },\n  {\n    question: \"Can I access courses on mobile devices?\",\n    answer: \"Absolutely! Our platform is fully responsive and optimized for all devices including smartphones, tablets, and desktops. You can learn anytime, anywhere.\"\n  }\n];\n\nexport default function FAQSection() {\n  const [openIndex, setOpenIndex] = useState<number | null>(0);\n\n  const toggleFAQ = (index: number) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <section className=\"py-20 bg-neutral-100\" data-testid=\"faq-section\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\n          {/* Left Image */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <img\n              src=\"https://images.unsplash.com/photo-1557804506-669a67965ba0?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=500\"\n              alt=\"Modern classroom setting with interactive learning environment\"\n              className=\"rounded-2xl shadow-2xl w-full h-auto\"\n              data-testid=\"faq-image\"\n            />\n          </motion.div>\n\n          {/* Right FAQ Content */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h3 className=\"text-secondary text-lg font-semibold mb-2\">FAQ's</h3>\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-8\" data-testid=\"faq-title\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-neutral-600 mb-8\" data-testid=\"faq-subtitle\">\n              Find answers to common queries in our Frequently Asked Questions section.\n            </p>\n\n            <div className=\"space-y-4\">\n              {faqData.map((faq, index) => (\n                <Card key={index} className=\"border border-neutral-200\" data-testid={`faq-item-${index}`}>\n                  <button\n                    onClick={() => toggleFAQ(index)}\n                    className=\"w-full text-left p-6 focus:outline-none\"\n                    data-testid={`faq-question-${index}`}\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <h4 className=\"font-semibold text-lg pr-4\">{faq.question}</h4>\n                      <motion.div\n                        animate={{ rotate: openIndex === index ? 180 : 0 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <ChevronDown className=\"text-neutral-400\" size={20} />\n                      </motion.div>\n                    </div>\n                  </button>\n                  \n                  <AnimatePresence>\n                    {openIndex === index && (\n                      <motion.div\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: \"auto\", opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"overflow-hidden\"\n                      >\n                        <div className=\"px-6 pb-6\">\n                          <p className=\"text-neutral-600\" data-testid={`faq-answer-${index}`}>\n                            {faq.answer}\n                          </p>\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </Card>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5425},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Facebook, Twitter, Instagram, Linkedin, Mail, Phone, MapPin } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-neutral-900 text-white py-16\" data-testid=\"footer\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div>\n            <h3 className=\"text-2xl font-bold mb-6\" data-testid=\"footer-brand\">\n              Knowledge Wave India\n            </h3>\n            <p className=\"text-neutral-300 mb-6\">\n              Empowering learners worldwide with quality education and expert instruction across diverse fields.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a\n                href=\"#\"\n                className=\"text-neutral-300 hover:text-white transition-colors\"\n                data-testid=\"social-facebook\"\n              >\n                <Facebook size={20} />\n              </a>\n              <a\n                href=\"#\"\n                className=\"text-neutral-300 hover:text-white transition-colors\"\n                data-testid=\"social-twitter\"\n              >\n                <Twitter size={20} />\n              </a>\n              <a\n                href=\"#\"\n                className=\"text-neutral-300 hover:text-white transition-colors\"\n                data-testid=\"social-instagram\"\n              >\n                <Instagram size={20} />\n              </a>\n              <a\n                href=\"#\"\n                className=\"text-neutral-300 hover:text-white transition-colors\"\n                data-testid=\"social-linkedin\"\n              >\n                <Linkedin size={20} />\n              </a>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Quick Links</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/\">\n                  <span className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"footer-link-home\">\n                    Home\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/courses\">\n                  <span className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"footer-link-courses\">\n                    Courses\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/packages\">\n                  <span className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"footer-link-packages\">\n                    Packages\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/about\">\n                  <span className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"footer-link-about\">\n                    About\n                  </span>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\">\n                  <span className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"footer-link-contact\">\n                    Contact\n                  </span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Categories */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Categories</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <a href=\"#\" className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"category-development\">\n                  Development\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"category-business\">\n                  Business\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"category-marketing\">\n                  Marketing\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"category-design\">\n                  Design\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-neutral-300 hover:text-white transition-colors\" data-testid=\"category-personal\">\n                  Personal Development\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Contact Info</h4>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <Mail className=\"text-primary\" size={20} />\n                <span className=\"text-neutral-300\" data-testid=\"contact-email\">\n                  info@knowledgewaveindia.com\n                </span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <Phone className=\"text-primary\" size={20} />\n                <span className=\"text-neutral-300\" data-testid=\"contact-phone\">\n                  +91 9876543210\n                </span>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <MapPin className=\"text-primary\" size={20} />\n                <span className=\"text-neutral-300\" data-testid=\"contact-address\">\n                  New Delhi, India\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-neutral-800 mt-12 pt-8 text-center\">\n          <p className=\"text-neutral-400\" data-testid=\"copyright\">\n            © 2024 Knowledge Wave India. All rights reserved. | Privacy Policy | Terms of Service\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5957},"client/src/components/hero-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ArrowRight, GraduationCap, Play } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport default function HeroSection() {\n  return (\n    <section className=\"gradient-bg pt-24 pb-16 relative overflow-hidden min-h-screen flex items-center\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 bg-black/10\" />\n      <div className=\"absolute top-20 left-10 w-64 h-64 bg-white/5 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-20 right-10 w-96 h-96 bg-secondary/10 rounded-full blur-3xl\" />\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"text-white\"\n          >\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2, duration: 0.6 }}\n              className=\"flex items-center gap-2 mb-6\"\n            >\n              <div className=\"w-12 h-12 bg-white/10 rounded-full flex items-center justify-center\">\n                <GraduationCap className=\"text-white\" size={24} />\n              </div>\n              <span className=\"text-lg font-medium opacity-90\">Premium Learning Platform</span>\n            </motion.div>\n\n            <motion.h1\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3, duration: 0.8 }}\n              className=\"text-5xl lg:text-7xl font-bold leading-tight mb-6\"\n              data-testid=\"hero-title\"\n            >\n              Never Stop{\" \"}\n              <span className=\"text-gradient bg-gradient-to-r from-secondary to-yellow-400 bg-clip-text text-transparent\">\n                Learning\n              </span>\n              <br />\n              Life{\" \"}\n              <span className=\"font-black\">Never Stop</span>\n              <br />\n              Teaching\n            </motion.h1>\n\n            <motion.p\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5, duration: 0.6 }}\n              className=\"text-xl lg:text-2xl mb-8 opacity-90 leading-relaxed\"\n              data-testid=\"hero-description\"\n            >\n              Every teaching and learning journey is unique. Following We'll help guide your way.\n            </motion.p>\n\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.7, duration: 0.6 }}\n              className=\"flex flex-col sm:flex-row gap-4\"\n            >\n              <Link href=\"/packages\">\n                <Button \n                  size=\"lg\" \n                  className=\"btn-secondary text-white font-semibold text-lg px-8 py-4 group\"\n                  data-testid=\"hero-enroll-button\"\n                >\n                  Enroll Now\n                  <ArrowRight className=\"ml-2 group-hover:translate-x-1 transition-transform\" size={20} />\n                </Button>\n              </Link>\n              \n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                className=\"border-white/30 text-white hover:bg-white/10 font-semibold text-lg px-8 py-4 group\"\n                data-testid=\"hero-watch-demo\"\n              >\n                <Play className=\"mr-2 group-hover:scale-110 transition-transform\" size={20} />\n                Watch Demo\n              </Button>\n            </motion.div>\n\n            {/* Stats */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.9, duration: 0.6 }}\n              className=\"flex gap-8 mt-12\"\n            >\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold mb-1\" data-testid=\"hero-stat-students\">80K+</div>\n                <div className=\"text-sm opacity-80\">Active Students</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold mb-1\" data-testid=\"hero-stat-courses\">80+</div>\n                <div className=\"text-sm opacity-80\">Expert Courses</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold mb-1\" data-testid=\"hero-stat-instructors\">80+</div>\n                <div className=\"text-sm opacity-80\">Top Instructors</div>\n              </div>\n            </motion.div>\n          </motion.div>\n\n          {/* Right Content - Hero Image */}\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            className=\"relative\"\n          >\n            <div className=\"relative\">\n              <motion.img\n                initial={{ scale: 0.8, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ duration: 1, delay: 0.4 }}\n                src=\"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Professional online learning students collaborating\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto animate-float\"\n                data-testid=\"hero-image\"\n              />\n              \n              {/* Floating elements */}\n              <motion.div\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: 1, duration: 0.5 }}\n                className=\"absolute -top-6 -left-6 bg-white p-4 rounded-2xl shadow-xl\"\n              >\n                <GraduationCap className=\"text-primary text-3xl\" />\n              </motion.div>\n              \n              <motion.div\n                initial={{ opacity: 0, scale: 0 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: 1.2, duration: 0.5 }}\n                className=\"absolute -bottom-6 -right-6 bg-secondary p-6 rounded-2xl text-white shadow-xl\"\n              >\n                <div className=\"text-sm font-medium\">Tech Wave</div>\n                <div className=\"text-xs opacity-80\">Creator Wave</div>\n              </motion.div>\n              \n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 1.4, duration: 0.5 }}\n                className=\"absolute top-1/2 -left-12 bg-white/95 backdrop-blur-sm p-4 rounded-xl shadow-lg\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-8 h-8 bg-accent rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-sm\">✓</span>\n                  </div>\n                  <div>\n                    <div className=\"font-semibold text-sm\">Course Completed</div>\n                    <div className=\"text-xs text-neutral-600\">Adobe Photoshop</div>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7497},"client/src/components/instructors-carousel.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Star } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport type { Instructor } from \"@shared/schema\";\n\nexport default function InstructorsCarousel() {\n  const { data: instructors = [], isLoading } = useQuery<Instructor[]>({\n    queryKey: [\"/api/instructors\"],\n  });\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n            {[...Array(8)].map((_, i) => (\n              <div key={i} className=\"animate-pulse text-center\">\n                <div className=\"w-32 h-32 bg-neutral-200 rounded-full mx-auto mb-4\" />\n                <div className=\"h-4 bg-neutral-200 rounded mb-2\" />\n                <div className=\"h-3 bg-neutral-200 rounded w-3/4 mx-auto\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-white\" data-testid=\"instructors-carousel\">\n      <div className=\"container mx-auto px-4\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h3 className=\"text-secondary text-lg font-semibold mb-2\">Skilled Introduce</h3>\n          <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"instructors-title\">\n            Our Top Class & Expert Instructors in One Place\n          </h2>\n          <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"instructors-subtitle\">\n            Learn from top-class, expert instructors all in one place with KnowledgeWaveIndia.\n          </p>\n        </motion.div>\n\n        {/* Instructors Grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n          {instructors.map((instructor, index) => (\n            <motion.div\n              key={instructor.id}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"instructor-card text-center h-full\" data-testid={`instructor-card-${instructor.id}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"relative mb-4\">\n                    <img\n                      src={instructor.avatar || \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=300\"}\n                      alt={`${instructor.name} - ${instructor.title}`}\n                      className=\"w-32 h-32 object-cover rounded-full mx-auto shadow-lg\"\n                      data-testid={`instructor-image-${instructor.id}`}\n                    />\n                    <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2 bg-white px-3 py-1 rounded-full shadow-md\">\n                      <div className=\"flex items-center gap-1 text-sm\">\n                        <Star className=\"text-yellow-400 fill-current\" size={14} />\n                        <span className=\"font-medium\" data-testid={`instructor-rating-${instructor.id}`}>\n                          {instructor.rating}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <h4 className=\"font-bold text-xl mb-2\" data-testid={`instructor-name-${instructor.id}`}>\n                    {instructor.name}\n                  </h4>\n                  \n                  <p className=\"text-neutral-600 mb-3\" data-testid={`instructor-title-${instructor.id}`}>\n                    {instructor.title}\n                  </p>\n                  \n                  <div className=\"text-sm text-neutral-500\">\n                    ({instructor.rating} Ratings)\n                  </div>\n\n                  {instructor.expertise && instructor.expertise.length > 0 && (\n                    <div className=\"mt-4 flex flex-wrap gap-1 justify-center\">\n                      {instructor.expertise.slice(0, 2).map((skill, idx) => (\n                        <span\n                          key={idx}\n                          className=\"bg-primary/10 text-primary px-2 py-1 rounded-full text-xs\"\n                        >\n                          {skill}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4828},"client/src/components/navbar.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, GraduationCap } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport default function Navbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [location] = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 0);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const toggleMenu = () => setIsOpen(!isOpen);\n\n  const isActive = (path: string) => location === path;\n\n  const navItems = [\n    { path: \"/\", label: \"Home\" },\n    { path: \"/courses\", label: \"Courses\" },\n    { path: \"/packages\", label: \"Packages\" },\n    { path: \"/about\", label: \"About\" },\n    { path: \"/contact\", label: \"Contact\" },\n  ];\n\n  return (\n    <nav \n      className={`fixed w-full z-50 transition-all duration-300 ${\n        isScrolled \n          ? \"bg-white/95 backdrop-blur-md shadow-lg\" \n          : \"bg-transparent\"\n      }`}\n      data-testid=\"navbar\"\n    >\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex justify-between items-center py-4\">\n          {/* Logo */}\n          <Link href=\"/\" data-testid=\"logo-link\">\n            <div className=\"flex items-center space-x-2\">\n              <GraduationCap className=\"h-8 w-8 text-primary\" />\n              <span className=\"text-2xl font-bold text-primary\">\n                Knowledge Wave India\n              </span>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                data-testid={`nav-link-${item.label.toLowerCase()}`}\n              >\n                <span\n                  className={`font-medium transition-colors hover:text-primary ${\n                    isActive(item.path)\n                      ? \"text-primary\"\n                      : isScrolled\n                      ? \"text-neutral-800\"\n                      : \"text-white\"\n                  }`}\n                >\n                  {item.label}\n                </span>\n              </Link>\n            ))}\n            <Link href=\"/login\" data-testid=\"login-button\">\n              <Button className=\"btn-primary text-white font-medium\">\n                Login\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile Hamburger */}\n          <div className=\"md:hidden\">\n            <button\n              onClick={toggleMenu}\n              className={`p-2 rounded-lg transition-colors ${\n                isScrolled ? \"text-neutral-800\" : \"text-white\"\n              }`}\n              data-testid=\"mobile-menu-button\"\n            >\n              {isOpen ? <X size={24} /> : <Menu size={24} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {isOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"md:hidden bg-white shadow-lg rounded-lg mt-2\"\n              data-testid=\"mobile-menu\"\n            >\n              <div className=\"px-4 py-2 space-y-2\">\n                {navItems.map((item) => (\n                  <Link\n                    key={item.path}\n                    href={item.path}\n                    onClick={() => setIsOpen(false)}\n                    data-testid={`mobile-nav-${item.label.toLowerCase()}`}\n                  >\n                    <div\n                      className={`block px-3 py-2 rounded-lg transition-colors ${\n                        isActive(item.path)\n                          ? \"text-primary bg-primary/10\"\n                          : \"text-neutral-800 hover:text-primary hover:bg-neutral-100\"\n                      }`}\n                    >\n                      {item.label}\n                    </div>\n                  </Link>\n                ))}\n                <Link\n                  href=\"/login\"\n                  onClick={() => setIsOpen(false)}\n                  data-testid=\"mobile-login-button\"\n                >\n                  <Button className=\"w-full mt-4 btn-primary text-white\">\n                    Login\n                  </Button>\n                </Link>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":4767},"client/src/components/newsletter.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Mail, CheckCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport default function Newsletter() {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { toast } = useToast();\n\n  const subscribeMutation = useMutation({\n    mutationFn: (data: { email: string }) => apiRequest(\"POST\", \"/api/newsletter\", data),\n    onSuccess: () => {\n      setIsSubmitted(true);\n      setEmail(\"\");\n      toast({\n        title: \"Success!\",\n        description: \"Thank you for subscribing to our newsletter.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to subscribe. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email.trim()) return;\n    \n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    subscribeMutation.mutate({ email });\n  };\n\n  return (\n    <section className=\"py-16 newsletter-bg relative overflow-hidden\" data-testid=\"newsletter-section\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 bg-black/20\" />\n      <div className=\"absolute top-0 left-0 w-64 h-64 bg-white/5 rounded-full blur-3xl\" />\n      <div className=\"absolute bottom-0 right-0 w-96 h-96 bg-secondary/10 rounded-full blur-3xl\" />\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-white\"\n          >\n            <div className=\"flex items-center gap-3 mb-6\">\n              <div className=\"w-12 h-12 bg-white/10 rounded-full flex items-center justify-center\">\n                <Mail className=\"text-white\" size={24} />\n              </div>\n              <span className=\"text-lg font-medium opacity-90\">Stay Updated</span>\n            </div>\n\n            <h2 className=\"text-4xl font-bold mb-6\" data-testid=\"newsletter-title\">\n              Want to stay informed about{\" \"}\n              <span className=\"text-secondary\">new courses</span> & study?\n            </h2>\n            \n            <p className=\"text-xl opacity-90 mb-8\">\n              Subscribe to our newsletter and be the first to know about new courses, special offers, and learning opportunities.\n            </p>\n\n            {isSubmitted ? (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"flex items-center gap-3 bg-white/10 backdrop-blur-sm p-4 rounded-lg\"\n                data-testid=\"newsletter-success\"\n              >\n                <CheckCircle className=\"text-accent\" size={24} />\n                <span className=\"font-medium\">Thank you for subscribing!</span>\n              </motion.div>\n            ) : (\n              <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-4\">\n                <Input\n                  type=\"email\"\n                  placeholder=\"Enter your email address\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"flex-1 bg-white/10 backdrop-blur-sm border-white/20 text-white placeholder:text-white/60 focus:border-white/40\"\n                  required\n                  data-testid=\"newsletter-email-input\"\n                />\n                <Button\n                  type=\"submit\"\n                  disabled={subscribeMutation.isPending}\n                  className=\"btn-secondary text-white px-8 whitespace-nowrap\"\n                  data-testid=\"newsletter-subscribe-button\"\n                >\n                  {subscribeMutation.isPending ? (\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"spinner\" />\n                      Subscribing...\n                    </div>\n                  ) : (\n                    \"Subscribe Now\"\n                  )}\n                </Button>\n              </form>\n            )}\n          </motion.div>\n\n          {/* Right Image */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"relative\"\n          >\n            <img\n              src=\"https://images.unsplash.com/photo-1553484771-cc0d9b8c2b33?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n              alt=\"Learning pathway illustration showing educational journey\"\n              className=\"rounded-2xl shadow-2xl w-full h-auto animate-float\"\n              data-testid=\"newsletter-image\"\n            />\n            \n            {/* Floating notification */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0 }}\n              whileInView={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 0.8, duration: 0.5 }}\n              viewport={{ once: true }}\n              className=\"absolute -top-4 -right-4 bg-white p-4 rounded-2xl shadow-xl\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Mail className=\"text-primary\" size={20} />\n                <div>\n                  <div className=\"font-semibold text-sm\">New Course Alert!</div>\n                  <div className=\"text-xs text-neutral-600\">AI & Machine Learning</div>\n                </div>\n              </div>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6211},"client/src/components/packages-grid.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Star, Check, ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport type { Package } from \"@shared/schema\";\n\ninterface PackagesGridProps {\n  title?: string;\n  subtitle?: string;\n  limit?: number;\n  showViewAll?: boolean;\n}\n\nexport default function PackagesGrid({ \n  title = \"Explore Our World's Best Packages\",\n  subtitle = \"Explore the world's best learning packages with KnowledgeWaveIndia, offering top-notch courses in various fields.\",\n  limit,\n  showViewAll = false\n}: PackagesGridProps) {\n  const { data: packages = [], isLoading } = useQuery<Package[]>({\n    queryKey: [\"/api/packages\"],\n  });\n\n  const filteredPackages = limit ? packages.slice(0, limit) : packages;\n\n  if (isLoading) {\n    return (\n      <div className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8\">\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"bg-neutral-200 h-48 rounded-t-xl\" />\n                <div className=\"p-6 space-y-3\">\n                  <div className=\"h-4 bg-neutral-200 rounded\" />\n                  <div className=\"h-6 bg-neutral-200 rounded w-3/4\" />\n                  <div className=\"h-8 bg-neutral-200 rounded\" />\n                  <div className=\"h-10 bg-neutral-200 rounded\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-white\" data-testid=\"packages-grid\">\n      <div className=\"container mx-auto px-4\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-16\"\n        >\n          <h3 className=\"text-secondary text-lg font-semibold mb-2\">Top Class Packages</h3>\n          <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"packages-title\">\n            {title}\n          </h2>\n          <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"packages-subtitle\">\n            {subtitle}\n          </p>\n        </motion.div>\n\n        {/* Packages Grid */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8\">\n          {filteredPackages.map((pkg, index) => (\n            <motion.div\n              key={pkg.id}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"package-card card-hover h-full\" data-testid={`package-card-${pkg.id}`}>\n                <div className=\"relative\">\n                  <img\n                    src={pkg.image || \"https://images.unsplash.com/photo-1553484771-371a605b060b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"}\n                    alt={`${pkg.title} package bundle`}\n                    className=\"w-full h-48 object-cover rounded-t-xl\"\n                    data-testid={`package-image-${pkg.id}`}\n                  />\n                  {pkg.originalPrice && pkg.discountedPrice && (\n                    <div className=\"absolute top-3 right-3 bg-secondary text-white px-2 py-1 rounded-full text-sm font-semibold\">\n                      Save ₹{(parseFloat(pkg.originalPrice) - parseFloat(pkg.discountedPrice)).toFixed(0)}\n                    </div>\n                  )}\n                </div>\n                \n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Badge className=\"bg-primary text-white\">\n                      {pkg.category}\n                    </Badge>\n                    <div className=\"flex items-center text-yellow-400 text-sm\">\n                      <Star className=\"fill-current\" size={14} />\n                      <span className=\"ml-1\" data-testid={`package-rating-${pkg.id}`}>\n                        ({pkg.rating} Reviews)\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <h4 className=\"font-bold text-xl mb-4\" data-testid={`package-title-${pkg.id}`}>\n                    {pkg.title}\n                  </h4>\n                  \n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <span className=\"text-2xl font-bold text-primary\" data-testid={`package-price-${pkg.id}`}>\n                      ₹ {pkg.discountedPrice}\n                    </span>\n                    {pkg.originalPrice && (\n                      <span className=\"text-lg text-neutral-500 line-through\">\n                        ₹ {pkg.originalPrice}\n                      </span>\n                    )}\n                  </div>\n\n                  {pkg.features && pkg.features.length > 0 && (\n                    <div className=\"mb-4 space-y-2\">\n                      {pkg.features.slice(0, 3).map((feature, idx) => (\n                        <div key={idx} className=\"flex items-center gap-2 text-sm\">\n                          <Check className=\"text-accent\" size={14} />\n                          <span>{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  <Link href={`/packages/${pkg.id}`}>\n                    <Button \n                      className=\"w-full btn-secondary text-white group\"\n                      data-testid={`package-enroll-${pkg.id}`}\n                    >\n                      Enroll Now\n                      <ArrowRight className=\"ml-2 group-hover:translate-x-1 transition-transform\" size={16} />\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* View All Button */}\n        {showViewAll && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mt-12\"\n          >\n            <Link href=\"/packages\">\n              <Button size=\"lg\" variant=\"outline\" className=\"px-8\" data-testid=\"view-all-packages\">\n                View All Packages\n              </Button>\n            </Link>\n          </motion.div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":6811},"client/src/components/stats-counter.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useIntersectionObserver } from \"@/hooks/use-intersection-observer\";\n\ninterface StatItem {\n  value: number;\n  label: string;\n  suffix?: string;\n}\n\nconst stats: StatItem[] = [\n  { value: 80000, label: \"Enrolled Students\", suffix: \"K+\" },\n  { value: 80, label: \"Live Courses\", suffix: \"+\" },\n  { value: 80, label: \"Best Trainers\", suffix: \"+\" },\n];\n\nfunction Counter({ value, suffix = \"\", duration = 2000 }: { value: number; suffix?: string; duration?: number }) {\n  const [count, setCount] = useState(0);\n  const [elementRef, isVisible] = useIntersectionObserver();\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (currentTime: number) => {\n      if (!startTime) startTime = currentTime;\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Easing function for smooth animation\n      const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n      const currentValue = Math.floor(easeOutQuart * value);\n      \n      setCount(currentValue);\n      \n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [isVisible, value, duration]);\n\n  const formatValue = (val: number) => {\n    if (suffix === \"K+\") {\n      return Math.floor(val / 1000) + \"K+\";\n    }\n    return val + suffix;\n  };\n\n  return (\n    <span ref={elementRef} className=\"counter\">\n      {formatValue(count)}\n    </span>\n  );\n}\n\nexport default function StatsCounter() {\n  return (\n    <section className=\"py-16 stats-section text-white\" data-testid=\"stats-counter\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-3 gap-8 text-center\">\n          {stats.map((stat, index) => (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.2 }}\n              viewport={{ once: true }}\n              className=\"space-y-2\"\n              data-testid={`stat-${index}`}\n            >\n              <div className=\"text-5xl font-bold mb-2\">\n                <Counter \n                  value={stat.value} \n                  suffix={stat.suffix}\n                  duration={2000 + index * 200}\n                />\n              </div>\n              <p className=\"text-xl opacity-90\" data-testid={`stat-label-${index}`}>\n                {stat.label}\n              </p>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2836},"client/src/hooks/use-intersection-observer.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\n\ninterface UseIntersectionObserverOptions {\n  threshold?: number;\n  rootMargin?: string;\n  triggerOnce?: boolean;\n}\n\nexport function useIntersectionObserver(\n  options: UseIntersectionObserverOptions = {}\n): [React.RefObject<HTMLElement>, boolean] {\n  const { threshold = 0.1, rootMargin = \"0px\", triggerOnce = true } = options;\n  const elementRef = useRef<HTMLElement>(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          if (triggerOnce) {\n            observer.unobserve(element);\n          }\n        } else if (!triggerOnce) {\n          setIsVisible(false);\n        }\n      },\n      { threshold, rootMargin }\n    );\n\n    observer.observe(element);\n\n    return () => {\n      observer.unobserve(element);\n    };\n  }, [threshold, rootMargin, triggerOnce]);\n\n  return [elementRef, isVisible];\n}\n","size_bytes":1086},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/animations.ts":{"content":"import { Variants } from \"framer-motion\";\n\n// Common animation variants\nexport const fadeIn: Variants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  }\n};\n\nexport const fadeInUp: Variants = {\n  hidden: { opacity: 0, y: 50 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { duration: 0.8, ease: \"easeOut\" }\n  }\n};\n\nexport const fadeInLeft: Variants = {\n  hidden: { opacity: 0, x: -50 },\n  visible: { \n    opacity: 1, \n    x: 0,\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  }\n};\n\nexport const fadeInRight: Variants = {\n  hidden: { opacity: 0, x: 50 },\n  visible: { \n    opacity: 1, \n    x: 0,\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  }\n};\n\nexport const scaleIn: Variants = {\n  hidden: { opacity: 0, scale: 0.8 },\n  visible: { \n    opacity: 1, \n    scale: 1,\n    transition: { duration: 0.5, ease: \"easeOut\" }\n  }\n};\n\nexport const slideInUp: Variants = {\n  hidden: { opacity: 0, y: 100 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { duration: 0.8, ease: \"easeOut\" }\n  }\n};\n\nexport const staggerContainer: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n      delayChildren: 0.2\n    }\n  }\n};\n\nexport const staggerItem: Variants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { duration: 0.5, ease: \"easeOut\" }\n  }\n};\n\n// Button hover animations\nexport const buttonHover = {\n  scale: 1.05,\n  transition: { duration: 0.2, ease: \"easeInOut\" }\n};\n\nexport const buttonTap = {\n  scale: 0.95,\n  transition: { duration: 0.1, ease: \"easeInOut\" }\n};\n\n// Card hover animations\nexport const cardHover = {\n  y: -10,\n  boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\",\n  transition: { duration: 0.3, ease: \"easeOut\" }\n};\n\n// Page transition animations\nexport const pageTransition: Variants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: { duration: 0.4, ease: \"easeOut\" }\n  },\n  exit: { \n    opacity: 0, \n    y: -20,\n    transition: { duration: 0.3, ease: \"easeIn\" }\n  }\n};\n\n// Loading spinner animation\nexport const spinnerRotate = {\n  rotate: 360,\n  transition: { duration: 1, ease: \"linear\", repeat: Infinity }\n};\n\n// Floating animation\nexport const floatingAnimation = {\n  y: [-10, 10, -10],\n  transition: {\n    duration: 3,\n    ease: \"easeInOut\",\n    repeat: Infinity\n  }\n};\n\n// Pulse animation\nexport const pulseAnimation = {\n  scale: [1, 1.05, 1],\n  transition: {\n    duration: 2,\n    ease: \"easeInOut\",\n    repeat: Infinity\n  }\n};\n\n// Typewriter animation\nexport const typewriterContainer: Variants = {\n  hidden: {},\n  visible: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport const typewriterLetter: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: { duration: 0.1 }\n  }\n};\n","size_bytes":2900},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Users, Award, BookOpen, Target, Heart, Lightbulb } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport StatsCounter from \"@/components/stats-counter\";\nimport InstructorsCarousel from \"@/components/instructors-carousel\";\n\nexport default function About() {\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"about-page\">\n      {/* Hero Section */}\n      <section className=\"gradient-bg pt-32 pb-16 text-white\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-5xl font-bold mb-6\" data-testid=\"about-hero-title\">\n              About <span className=\"text-secondary\">Knowledge Wave India</span>\n            </h1>\n            <p className=\"text-xl opacity-90 max-w-3xl mx-auto\" data-testid=\"about-hero-subtitle\">\n              Empowering learners worldwide with quality education and expert instruction across diverse fields.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Mission Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <img\n                src=\"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=500\"\n                alt=\"Professional online learning students collaborating\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"mission-image\"\n              />\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold text-neutral-900 mb-6\" data-testid=\"mission-title\">\n                Our Mission\n              </h2>\n              <p className=\"text-lg text-neutral-600 mb-6\" data-testid=\"mission-description\">\n                At Knowledge Wave India, we believe that education is the foundation of progress. Our mission is to democratize access to high-quality learning experiences, making it possible for anyone, anywhere, to acquire new skills and advance their careers.\n              </p>\n              <p className=\"text-lg text-neutral-600 mb-8\">\n                We strive to bridge the gap between traditional education and the rapidly evolving demands of the modern workforce by providing practical, industry-relevant courses taught by experienced professionals.\n              </p>\n              \n              <div className=\"grid md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    <Users className=\"text-primary\" size={24} />\n                  </div>\n                  <h3 className=\"font-bold text-lg mb-2\">80K+</h3>\n                  <p className=\"text-neutral-600\">Students Worldwide</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-secondary/10 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    <BookOpen className=\"text-secondary\" size={24} />\n                  </div>\n                  <h3 className=\"font-bold text-lg mb-2\">80+</h3>\n                  <p className=\"text-neutral-600\">Expert Courses</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-accent/10 rounded-full flex items-center justify-center mx-auto mb-3\">\n                    <Award className=\"text-accent\" size={24} />\n                  </div>\n                  <h3 className=\"font-bold text-lg mb-2\">80+</h3>\n                  <p className=\"text-neutral-600\">Industry Experts</p>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-20 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"values-title\">\n              Our Core Values\n            </h2>\n            <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"values-subtitle\">\n              The principles that guide everything we do and shape our commitment to excellence in education.\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: <Target className=\"text-primary text-3xl\" />,\n                title: \"Excellence\",\n                description: \"We are committed to delivering the highest quality educational content and learning experiences.\"\n              },\n              {\n                icon: <Heart className=\"text-secondary text-3xl\" />,\n                title: \"Accessibility\",\n                description: \"Education should be accessible to everyone, regardless of background, location, or financial situation.\"\n              },\n              {\n                icon: <Lightbulb className=\"text-accent text-3xl\" />,\n                title: \"Innovation\",\n                description: \"We continuously innovate our teaching methods and technology to enhance the learning experience.\"\n              }\n            ].map((value, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                data-testid={`value-${index}`}\n              >\n                <Card className=\"text-center h-full card-hover\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"mb-6\">{value.icon}</div>\n                    <h3 className=\"text-xl font-bold text-neutral-900 mb-4\">{value.title}</h3>\n                    <p className=\"text-neutral-600\">{value.description}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Counter */}\n      <StatsCounter />\n\n      {/* Story Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-4xl font-bold text-neutral-900 mb-6\" data-testid=\"story-title\">\n                Our Story\n              </h2>\n              <p className=\"text-lg text-neutral-600 mb-6\" data-testid=\"story-description\">\n                Knowledge Wave India was founded with a simple yet powerful vision: to make quality education accessible to everyone. What started as a small initiative has grown into a comprehensive learning platform that serves thousands of students worldwide.\n              </p>\n              <p className=\"text-lg text-neutral-600 mb-6\">\n                Our founders recognized the gap between traditional education systems and the rapidly changing demands of the modern workforce. They envisioned a platform where industry experts could share their knowledge directly with learners, creating a more practical and relevant educational experience.\n              </p>\n              <p className=\"text-lg text-neutral-600\">\n                Today, we continue to evolve and expand our offerings, always staying true to our core mission of empowering individuals through education.\n              </p>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <img\n                src=\"https://images.unsplash.com/photo-1557804506-669a67965ba0?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=500\"\n                alt=\"Modern classroom setting with interactive learning environment\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"story-image\"\n              />\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Team Section */}\n      <InstructorsCarousel />\n\n      {/* Achievement Section */}\n      <section className=\"py-20 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"achievements-title\">\n              Our Achievements\n            </h2>\n            <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"achievements-subtitle\">\n              Milestones that reflect our commitment to educational excellence and student success.\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              {\n                number: \"80K+\",\n                label: \"Students Enrolled\",\n                description: \"Learners from around the world have chosen our platform\"\n              },\n              {\n                number: \"95%\",\n                label: \"Completion Rate\",\n                description: \"High engagement and course completion rates\"\n              },\n              {\n                number: \"4.8/5\",\n                label: \"Average Rating\",\n                description: \"Consistently high ratings from our students\"\n              },\n              {\n                number: \"50+\",\n                label: \"Countries\",\n                description: \"Global reach with students from diverse backgrounds\"\n              }\n            ].map((achievement, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                className=\"text-center\"\n                data-testid={`achievement-${index}`}\n              >\n                <div className=\"text-4xl font-bold text-primary mb-2\">{achievement.number}</div>\n                <h3 className=\"text-xl font-bold text-neutral-900 mb-2\">{achievement.label}</h3>\n                <p className=\"text-neutral-600\">{achievement.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":11723},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Mail, Phone, MapPin, Clock, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface ContactFormData {\n  name: string;\n  email: string;\n  subject: string;\n  message: string;\n}\n\nexport default function Contact() {\n  const [formData, setFormData] = useState<ContactFormData>({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  });\n  const { toast } = useToast();\n\n  const contactMutation = useMutation({\n    mutationFn: (data: ContactFormData) => apiRequest(\"POST\", \"/api/contact\", data),\n    onSuccess: () => {\n      toast({\n        title: \"Message Sent!\",\n        description: \"Thank you for contacting us. We'll get back to you soon.\",\n      });\n      setFormData({ name: \"\", email: \"\", subject: \"\", message: \"\" });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send message. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Basic validation\n    if (!formData.name.trim() || !formData.email.trim() || !formData.message.trim()) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please fill in all required fields.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    contactMutation.mutate(formData);\n  };\n\n  const handleInputChange = (field: keyof ContactFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"contact-page\">\n      {/* Hero Section */}\n      <section className=\"gradient-bg pt-32 pb-16 text-white\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-5xl font-bold mb-6\" data-testid=\"contact-hero-title\">\n              Get in <span className=\"text-secondary\">Touch</span>\n            </h1>\n            <p className=\"text-xl opacity-90 max-w-2xl mx-auto\" data-testid=\"contact-hero-subtitle\">\n              Have questions about our courses or need support? We're here to help you on your learning journey.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Contact Information Cards */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"grid md:grid-cols-3 gap-8 mb-16\"\n          >\n            <Card className=\"text-center card-hover\" data-testid=\"contact-email-card\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Mail className=\"text-primary\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-bold text-neutral-900 mb-2\">Email Us</h3>\n                <p className=\"text-neutral-600 mb-4\">Send us an email anytime</p>\n                <a \n                  href=\"mailto:info@knowledgewaveindia.com\" \n                  className=\"text-primary hover:underline font-medium\"\n                  data-testid=\"contact-email-link\"\n                >\n                  info@knowledgewaveindia.com\n                </a>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center card-hover\" data-testid=\"contact-phone-card\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-secondary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Phone className=\"text-secondary\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-bold text-neutral-900 mb-2\">Call Us</h3>\n                <p className=\"text-neutral-600 mb-4\">Mon-Fri 9AM-6PM IST</p>\n                <a \n                  href=\"tel:+919876543210\" \n                  className=\"text-primary hover:underline font-medium\"\n                  data-testid=\"contact-phone-link\"\n                >\n                  +91 9876543210\n                </a>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center card-hover\" data-testid=\"contact-location-card\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-accent/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <MapPin className=\"text-accent\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-bold text-neutral-900 mb-2\">Visit Us</h3>\n                <p className=\"text-neutral-600 mb-4\">Our headquarters</p>\n                <address className=\"text-primary not-italic\" data-testid=\"contact-address\">\n                  New Delhi, India\n                </address>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* Contact Form & Info */}\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            {/* Contact Form */}\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.4 }}\n            >\n              <Card className=\"shadow-xl\">\n                <CardContent className=\"p-8\">\n                  <h2 className=\"text-3xl font-bold text-neutral-900 mb-6\" data-testid=\"contact-form-title\">\n                    Send us a Message\n                  </h2>\n                  \n                  <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"contact-form\">\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                          Full Name *\n                        </label>\n                        <Input\n                          type=\"text\"\n                          value={formData.name}\n                          onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                          placeholder=\"Your full name\"\n                          className=\"form-input\"\n                          required\n                          data-testid=\"contact-name-input\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                          Email Address *\n                        </label>\n                        <Input\n                          type=\"email\"\n                          value={formData.email}\n                          onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                          placeholder=\"your.email@example.com\"\n                          className=\"form-input\"\n                          required\n                          data-testid=\"contact-email-input\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                        Subject\n                      </label>\n                      <Input\n                        type=\"text\"\n                        value={formData.subject}\n                        onChange={(e) => handleInputChange(\"subject\", e.target.value)}\n                        placeholder=\"What's this about?\"\n                        className=\"form-input\"\n                        data-testid=\"contact-subject-input\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                        Message *\n                      </label>\n                      <Textarea\n                        value={formData.message}\n                        onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                        placeholder=\"Tell us how we can help you...\"\n                        rows={6}\n                        className=\"form-input resize-none\"\n                        required\n                        data-testid=\"contact-message-input\"\n                      />\n                    </div>\n\n                    <Button\n                      type=\"submit\"\n                      disabled={contactMutation.isPending}\n                      className=\"w-full btn-primary text-white font-semibold text-lg py-3\"\n                      data-testid=\"contact-submit-button\"\n                    >\n                      {contactMutation.isPending ? (\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"spinner\" />\n                          Sending...\n                        </div>\n                      ) : (\n                        <>\n                          <Send className=\"mr-2\" size={20} />\n                          Send Message\n                        </>\n                      )}\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Additional Information */}\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.6 }}\n              className=\"space-y-8\"\n            >\n              <div>\n                <h3 className=\"text-2xl font-bold text-neutral-900 mb-4\" data-testid=\"faq-title\">\n                  Frequently Asked Questions\n                </h3>\n                <div className=\"space-y-4\">\n                  <div className=\"border-l-4 border-primary pl-4\">\n                    <h4 className=\"font-semibold text-lg mb-2\">How do I enroll in a course?</h4>\n                    <p className=\"text-neutral-600\">\n                      Simply browse our courses, select the one you're interested in, and click \"Enroll Now\". You'll have instant access to all course materials.\n                    </p>\n                  </div>\n                  <div className=\"border-l-4 border-secondary pl-4\">\n                    <h4 className=\"font-semibold text-lg mb-2\">Do you offer certificates?</h4>\n                    <p className=\"text-neutral-600\">\n                      Yes! Upon successful completion of any course, you'll receive a certificate that you can share on LinkedIn and other professional networks.\n                    </p>\n                  </div>\n                  <div className=\"border-l-4 border-accent pl-4\">\n                    <h4 className=\"font-semibold text-lg mb-2\">Can I get a refund?</h4>\n                    <p className=\"text-neutral-600\">\n                      We offer a 30-day money-back guarantee on all paid courses. If you're not satisfied, contact us for a full refund.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-2xl font-bold text-neutral-900 mb-4\" data-testid=\"office-hours-title\">\n                  Office Hours\n                </h3>\n                <div className=\"bg-neutral-100 rounded-lg p-6\">\n                  <div className=\"flex items-start gap-3 mb-4\">\n                    <Clock className=\"text-primary mt-1\" size={20} />\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Support Hours</h4>\n                      <div className=\"space-y-1 text-neutral-600\">\n                        <p>Monday - Friday: 9:00 AM - 6:00 PM IST</p>\n                        <p>Saturday: 10:00 AM - 4:00 PM IST</p>\n                        <p>Sunday: Closed</p>\n                      </div>\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-neutral-600\">\n                    We typically respond to emails within 24 hours during business days.\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-2xl font-bold text-neutral-900 mb-4\" data-testid=\"become-instructor-title\">\n                  Become an Instructor\n                </h3>\n                <Card className=\"bg-gradient-to-r from-primary/10 to-secondary/10\">\n                  <CardContent className=\"p-6\">\n                    <p className=\"text-neutral-700 mb-4\">\n                      Are you an expert in your field? Join our team of instructors and share your knowledge with thousands of learners worldwide.\n                    </p>\n                    <Button variant=\"outline\" className=\"w-full\" data-testid=\"apply-instructor-button\">\n                      Apply to Teach\n                    </Button>\n                  </CardContent>\n                </Card>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":13699},"client/src/pages/course-detail.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Star, Clock, Users, Award, ArrowLeft, Play, BookOpen } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Course, Instructor } from \"@shared/schema\";\n\nexport default function CourseDetail() {\n  const { id } = useParams();\n  const { toast } = useToast();\n\n  const { data: course, isLoading, error } = useQuery<Course>({\n    queryKey: [\"/api/courses\", id],\n  });\n\n  const { data: instructors = [] } = useQuery<Instructor[]>({\n    queryKey: [\"/api/instructors\"],\n  });\n\n  const enrollMutation = useMutation({\n    mutationFn: (data: { userId: string; courseId: string }) => \n      apiRequest(\"POST\", \"/api/enrollments\", data),\n    onSuccess: () => {\n      toast({\n        title: \"Enrollment Successful!\",\n        description: \"You have been enrolled in this course. Check your email for details.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Enrollment Failed\",\n        description: \"Please try again or contact support.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleEnroll = () => {\n    // In a real app, you'd get the user ID from authentication context\n    const userId = \"demo-user-id\";\n    enrollMutation.mutate({ userId, courseId: id! });\n  };\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Course Not Found</h2>\n          <p className=\"text-neutral-600 mb-6\">The course you're looking for doesn't exist.</p>\n          <Link href=\"/courses\">\n            <Button>Back to Courses</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-white\">\n        <div className=\"container mx-auto px-4 pt-32\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-neutral-200 rounded w-48 mb-8\" />\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              <div className=\"lg:col-span-2\">\n                <div className=\"h-64 bg-neutral-200 rounded-2xl mb-6\" />\n                <div className=\"h-8 bg-neutral-200 rounded w-3/4 mb-4\" />\n                <div className=\"h-4 bg-neutral-200 rounded mb-2\" />\n                <div className=\"h-4 bg-neutral-200 rounded w-5/6\" />\n              </div>\n              <div>\n                <div className=\"h-96 bg-neutral-200 rounded-2xl\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!course) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Course Not Found</h2>\n          <p className=\"text-neutral-600 mb-6\">The course you're looking for doesn't exist.</p>\n          <Link href=\"/courses\">\n            <Button>Back to Courses</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const instructor = instructors.find(inst => inst.id === course.instructorId);\n\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"course-detail-page\">\n      {/* Breadcrumb */}\n      <div className=\"pt-24 pb-8 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <Link href=\"/courses\">\n            <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"back-to-courses\">\n              <ArrowLeft className=\"mr-2\" size={16} />\n              Back to Courses\n            </Button>\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 pb-20\">\n        <div className=\"grid lg:grid-cols-3 gap-12\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              {/* Course Image */}\n              <div className=\"relative mb-8\">\n                <img\n                  src={course.thumbnail || \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"}\n                  alt={course.title}\n                  className=\"w-full h-64 lg:h-80 object-cover rounded-2xl shadow-lg\"\n                  data-testid=\"course-detail-image\"\n                />\n                <Badge className=\"absolute top-4 left-4 bg-primary text-white\">\n                  {course.category}\n                </Badge>\n                <Button\n                  variant=\"secondary\"\n                  size=\"lg\"\n                  className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white/90 hover:bg-white text-neutral-900\"\n                  data-testid=\"play-preview-button\"\n                >\n                  <Play className=\"mr-2\" size={20} />\n                  Preview Course\n                </Button>\n              </div>\n\n              {/* Course Info */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <div className=\"flex items-center text-yellow-400\">\n                    <Star className=\"fill-current\" size={20} />\n                    <span className=\"ml-1 font-semibold\" data-testid=\"course-rating\">\n                      {course.rating} (4.8 Reviews)\n                    </span>\n                  </div>\n                  <Badge variant=\"outline\">{course.category}</Badge>\n                  <span className=\"text-sm text-neutral-600\">Updated recently</span>\n                </div>\n\n                <h1 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"course-title\">\n                  {course.title}\n                </h1>\n\n                <p className=\"text-xl text-neutral-600 mb-6\" data-testid=\"course-description\">\n                  {course.description || \"Master new skills with this comprehensive course designed by industry experts. Learn at your own pace with hands-on projects and real-world examples.\"}\n                </p>\n\n                <div className=\"flex items-center gap-6 text-sm text-neutral-600\">\n                  <div className=\"flex items-center gap-2\">\n                    <Clock size={16} />\n                    <span>{course.lessons} lessons</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Users size={16} />\n                    <span>15,000+ students</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Award size={16} />\n                    <span>Certificate included</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Instructor Info */}\n              {instructor && (\n                <div className=\"mb-8\">\n                  <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\" data-testid=\"instructor-section-title\">\n                    Your Instructor\n                  </h2>\n                  <Card className=\"instructor-card\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex gap-4 items-center\">\n                        <img\n                          src={instructor.avatar || \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"}\n                          alt={instructor.name}\n                          className=\"w-16 h-16 rounded-full object-cover\"\n                          data-testid=\"instructor-avatar\"\n                        />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-xl mb-1\" data-testid=\"instructor-name\">\n                            {instructor.name}\n                          </h3>\n                          <p className=\"text-neutral-600 mb-2\" data-testid=\"instructor-title\">\n                            {instructor.title}\n                          </p>\n                          <div className=\"flex items-center gap-1 text-yellow-400\">\n                            <Star className=\"fill-current\" size={16} />\n                            <span className=\"text-neutral-600\" data-testid=\"instructor-rating\">\n                              {instructor.rating} instructor rating\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      {instructor.bio && (\n                        <p className=\"text-neutral-600 mt-4\" data-testid=\"instructor-bio\">\n                          {instructor.bio}\n                        </p>\n                      )}\n                    </CardContent>\n                  </Card>\n                </div>\n              )}\n\n              {/* Course Curriculum */}\n              <div>\n                <h2 className=\"text-2xl font-bold text-neutral-900 mb-6\" data-testid=\"curriculum-title\">\n                  Course Curriculum\n                </h2>\n                <div className=\"space-y-4\">\n                  {Array.from({ length: course.lessons || 5 }, (_, index) => (\n                    <Card key={index} className=\"course-card\" data-testid={`lesson-${index}`}>\n                      <CardContent className=\"p-4\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                            <BookOpen className=\"text-primary\" size={16} />\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-semibold mb-1\">\n                              Lesson {index + 1}: Introduction to {course.title.split(' ').slice(-2).join(' ')}\n                            </h3>\n                            <p className=\"text-sm text-neutral-600\">\n                              Learn the fundamentals and best practices in this comprehensive lesson.\n                            </p>\n                          </div>\n                          <div className=\"text-sm text-neutral-500\">\n                            {10 + index * 2} min\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n              className=\"sticky top-32\"\n            >\n              <Card className=\"shadow-xl\">\n                <CardContent className=\"p-8\">\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-4xl font-bold text-primary mb-2\" data-testid=\"course-price\">\n                      Free\n                    </div>\n                    <p className=\"text-neutral-600\">Full access included</p>\n                  </div>\n\n                  <Button\n                    onClick={handleEnroll}\n                    disabled={enrollMutation.isPending}\n                    className=\"w-full btn-primary text-white font-semibold text-lg py-4 mb-4\"\n                    data-testid=\"enroll-course-button\"\n                  >\n                    {enrollMutation.isPending ? (\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"spinner\" />\n                        Enrolling...\n                      </div>\n                    ) : (\n                      \"Enroll for Free\"\n                    )}\n                  </Button>\n\n                  <p className=\"text-center text-sm text-neutral-600 mb-6\">\n                    Start learning immediately\n                  </p>\n\n                  <Separator className=\"my-6\" />\n\n                  <div className=\"space-y-4\">\n                    <h3 className=\"font-bold text-lg\">This course includes:</h3>\n                    <div className=\"space-y-3 text-sm\">\n                      <div className=\"flex items-center gap-3\">\n                        <Clock className=\"text-primary\" size={16} />\n                        <span>{course.lessons} video lessons</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <BookOpen className=\"text-primary\" size={16} />\n                        <span>Downloadable resources</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Award className=\"text-primary\" size={16} />\n                        <span>Certificate of completion</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Users className=\"text-primary\" size={16} />\n                        <span>Access to community</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Separator className=\"my-6\" />\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Share this course:</h4>\n                    <div className=\"flex gap-2\">\n                      <Button variant=\"outline\" size=\"sm\" data-testid=\"share-facebook\">\n                        Facebook\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" data-testid=\"share-twitter\">\n                        Twitter\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" data-testid=\"share-linkedin\">\n                        LinkedIn\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":14340},"client/src/pages/courses.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Search, Filter, Star, Clock, Users, BookOpen } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Link } from \"wouter\";\nimport type { Course } from \"@shared/schema\";\n\nexport default function Courses() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"popular\");\n\n  const { data: courses = [], isLoading, error } = useQuery<Course[]>({\n    queryKey: [\"/api/courses\", selectedCategory, searchQuery],\n  });\n\n  const categories = [\"All\", \"Development\", \"Design\", \"Business\", \"Marketing\", \"Finance\", \"Technology\"];\n  const sortOptions = [\n    { value: \"popular\", label: \"Most Popular\" },\n    { value: \"newest\", label: \"Newest First\" },\n    { value: \"rating\", label: \"Highest Rated\" },\n    { value: \"title\", label: \"A-Z\" },\n  ];\n\n  const filteredAndSortedCourses = courses\n    .filter(course => \n      (!searchQuery || course.title.toLowerCase().includes(searchQuery.toLowerCase())) &&\n      (!selectedCategory || selectedCategory === \"All\" || course.category === selectedCategory)\n    )\n    .sort((a, b) => {\n      switch (sortBy) {\n        case \"newest\":\n          return new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime();\n        case \"rating\":\n          return parseFloat(b.rating!) - parseFloat(a.rating!);\n        case \"title\":\n          return a.title.localeCompare(b.title);\n        default:\n          return 0;\n      }\n    });\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Failed to Load Courses</h2>\n          <p className=\"text-neutral-600\">Please try again later.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"courses-page\">\n      {/* Hero Section */}\n      <section className=\"gradient-bg pt-32 pb-16 text-white\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-5xl font-bold mb-6\" data-testid=\"courses-hero-title\">\n              Explore Our <span className=\"text-secondary\">Courses</span>\n            </h1>\n            <p className=\"text-xl opacity-90 max-w-2xl mx-auto\" data-testid=\"courses-hero-subtitle\">\n              Discover a world of knowledge with our comprehensive course collection designed by industry experts.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Search and Filters */}\n      <section className=\"py-12 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"bg-white rounded-2xl shadow-lg p-8\"\n          >\n            <div className=\"grid md:grid-cols-4 gap-4 mb-6\">\n              <div className=\"md:col-span-2\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search courses...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 form-input\"\n                    data-testid=\"course-search-input\"\n                  />\n                </div>\n              </div>\n              \n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger data-testid=\"category-filter\">\n                  <SelectValue placeholder=\"All Categories\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {categories.map((category) => (\n                    <SelectItem key={category} value={category === \"All\" ? \"\" : category}>\n                      {category}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Select value={sortBy} onValueChange={setSortBy}>\n                <SelectTrigger data-testid=\"sort-filter\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {sortOptions.map((option) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-neutral-600\" data-testid=\"courses-count\">\n                {filteredAndSortedCourses.length} courses found\n              </p>\n              <div className=\"flex items-center gap-2 text-sm text-neutral-500\">\n                <Filter size={16} />\n                <span>Filters applied: {selectedCategory && selectedCategory !== \"All\" ? 1 : 0}</span>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Courses Grid */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          {isLoading ? (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n              {[...Array(12)].map((_, i) => (\n                <div key={i} className=\"animate-pulse\">\n                  <div className=\"bg-neutral-200 h-48 rounded-t-xl\" />\n                  <div className=\"p-6 space-y-3\">\n                    <div className=\"h-4 bg-neutral-200 rounded\" />\n                    <div className=\"h-4 bg-neutral-200 rounded w-3/4\" />\n                    <div className=\"h-10 bg-neutral-200 rounded\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : filteredAndSortedCourses.length === 0 ? (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"text-center py-16\"\n            >\n              <BookOpen className=\"mx-auto h-16 w-16 text-neutral-400 mb-4\" />\n              <h3 className=\"text-2xl font-bold text-neutral-900 mb-2\" data-testid=\"no-courses-title\">\n                No Courses Found\n              </h3>\n              <p className=\"text-neutral-600 mb-6\" data-testid=\"no-courses-description\">\n                Try adjusting your search criteria or browse all courses.\n              </p>\n              <Button\n                onClick={() => {\n                  setSearchQuery(\"\");\n                  setSelectedCategory(\"\");\n                }}\n                data-testid=\"clear-filters-button\"\n              >\n                Clear Filters\n              </Button>\n            </motion.div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n              {filteredAndSortedCourses.map((course, index) => (\n                <motion.div\n                  key={course.id}\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.05 }}\n                >\n                  <Card className=\"course-card card-hover h-full\" data-testid={`course-card-${course.id}`}>\n                    <div className=\"relative\">\n                      <img\n                        src={course.thumbnail || \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250\"}\n                        alt={course.title}\n                        className=\"w-full h-48 object-cover rounded-t-xl\"\n                        data-testid={`course-image-${course.id}`}\n                      />\n                      <Badge className=\"absolute top-3 left-3 bg-primary text-white\">\n                        {course.category}\n                      </Badge>\n                    </div>\n                    \n                    <CardContent className=\"p-6\">\n                      <h4 className=\"font-bold text-lg mb-2 line-clamp-2\" data-testid={`course-title-${course.id}`}>\n                        {course.title}\n                      </h4>\n                      \n                      <p className=\"text-neutral-600 text-sm mb-4 line-clamp-3\">\n                        {course.description || \"Master new skills with this comprehensive course designed by industry experts.\"}\n                      </p>\n                      \n                      <div className=\"flex items-center justify-between mb-4 text-sm text-neutral-600\">\n                        <div className=\"flex items-center gap-1\">\n                          <Clock size={14} />\n                          <span data-testid={`course-lessons-${course.id}`}>{course.lessons} Lessons</span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <Star className=\"text-yellow-400 fill-current\" size={14} />\n                          <span data-testid={`course-rating-${course.id}`}>{course.rating}</span>\n                        </div>\n                      </div>\n                      \n                      <Link href={`/courses/${course.id}`}>\n                        <Button \n                          className=\"w-full btn-primary text-white\"\n                          data-testid={`course-enroll-${course.id}`}\n                        >\n                          View Course\n                        </Button>\n                      </Link>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10385},"client/src/pages/home.tsx":{"content":"import { motion } from \"framer-motion\";\nimport HeroSection from \"@/components/hero-section\";\nimport CoursesGrid from \"@/components/courses-grid\";\nimport PackagesGrid from \"@/components/packages-grid\";\nimport InstructorsCarousel from \"@/components/instructors-carousel\";\nimport FAQSection from \"@/components/faq-section\";\nimport StatsCounter from \"@/components/stats-counter\";\nimport Newsletter from \"@/components/newsletter\";\nimport { Button } from \"@/components/ui/button\";\nimport { BookOpen, Users, Award, TrendingUp, CheckCircle, UserCheck } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\n// Brand partners data\nconst brandPartners = [\n  \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=100\",\n  \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=100\",\n  \"https://images.unsplash.com/photo-1516321318423-f06f85e504b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=100\",\n  \"https://images.unsplash.com/photo-1557804506-669a67965ba0?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=100\",\n];\n\nexport default function Home() {\n  return (\n    <div data-testid=\"home-page\">\n      {/* Hero Section */}\n      <HeroSection />\n\n      {/* Brand Partners */}\n      <section className=\"py-12 bg-neutral-100\" data-testid=\"brand-partners\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-center space-x-12 overflow-x-auto\">\n            {brandPartners.map((logo, index) => (\n              <div key={index} className=\"flex-shrink-0 brand-logo\">\n                <img \n                  src={logo} \n                  alt={`Partner ${index + 1}`} \n                  className=\"h-12 w-auto\"\n                  data-testid={`partner-logo-${index}`}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Trending Courses */}\n      <CoursesGrid limit={8} showViewAll={true} />\n\n      {/* About Section */}\n      <section className=\"py-20 bg-neutral-100\" data-testid=\"about-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <img\n                src=\"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=500\"\n                alt=\"Educational platform interface showing collaborative learning\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"about-image\"\n              />\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <h3 className=\"text-secondary text-lg font-semibold mb-2\">About Us</h3>\n              <h2 className=\"text-4xl font-bold text-neutral-900 mb-6\" data-testid=\"about-title\">\n                25 Of Top <span className=\"text-primary\">Courses</span><br />\n                Now in One Place\n              </h2>\n              <p className=\"text-lg text-neutral-600 mb-8\" data-testid=\"about-description\">\n                Discover a curated selection of the 25 best courses offered by KnowledgeWaveIndia, covering a diverse range of subjects. Whether you're looking to enhance your skills in technology, business, arts, or personal development, these top-rated courses provide comprehensive content and expert instruction to help you achieve your learning goals.\n              </p>\n              \n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-4\">\n                  <CheckCircle className=\"text-accent text-xl\" />\n                  <span className=\"text-lg text-neutral-800\">The Most World Class Instructors</span>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <CheckCircle className=\"text-accent text-xl\" />\n                  <span className=\"text-lg text-neutral-800\">Access Your Class anywhere</span>\n                </div>\n                <div className=\"flex items-center gap-4\">\n                  <CheckCircle className=\"text-accent text-xl\" />\n                  <span className=\"text-lg text-neutral-800\">Flexible Course Plan</span>\n                </div>\n              </div>\n\n              <Link href=\"/packages\">\n                <Button className=\"btn-secondary text-white font-semibold text-lg px-8 py-4\" data-testid=\"about-enroll-button\">\n                  Enroll Now\n                </Button>\n              </Link>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Packages Section */}\n      <PackagesGrid limit={5} showViewAll={true} />\n\n      {/* Newsletter */}\n      <Newsletter />\n\n      {/* Instructors */}\n      <InstructorsCarousel />\n\n      {/* Stats Counter */}\n      <StatsCounter />\n\n      {/* FAQ Section */}\n      <FAQSection />\n\n      {/* Learning Journey Features */}\n      <section className=\"py-20 bg-white\" data-testid=\"learning-journey\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mb-16\"\n          >\n            <h3 className=\"text-secondary text-lg font-semibold mb-2\">How We Start Journey</h3>\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"journey-title\">\n              Start your Learning Journey Today!\n            </h2>\n            <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"journey-subtitle\">\n              Begin your educational adventure today with KnowledgeWaveIndia!\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              {\n                icon: <Users className=\"text-primary text-2xl\" />,\n                title: \"Learn with Experts\",\n                description: \"Gain knowledge from industry experts with KnowledgeWaveIndia.\"\n              },\n              {\n                icon: <BookOpen className=\"text-secondary text-2xl\" />,\n                title: \"Learn Anything\",\n                description: \"Master any subject with KnowledgeWaveIndia's diverse course offerings.\"\n              },\n              {\n                icon: <Award className=\"text-accent text-2xl\" />,\n                title: \"Get Online Certificate\",\n                description: \"Earn an online certificate with KnowledgeWaveIndia's accredited courses.\"\n              },\n              {\n                icon: <TrendingUp className=\"text-purple-500 text-2xl\" />,\n                title: \"Comprehensive Learning\",\n                description: \"Experience comprehensive learning with KnowledgeWaveIndia's extensive course catalog.\"\n              }\n            ].map((feature, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                className=\"text-center\"\n                data-testid={`journey-feature-${index}`}\n              >\n                <div className=\"bg-primary/10 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  {feature.icon}\n                </div>\n                <h4 className=\"font-bold text-xl mb-3\">{feature.title}</h4>\n                <p className=\"text-neutral-600\">{feature.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-neutral-100\" data-testid=\"cta-section\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-2 gap-12\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"bg-white rounded-2xl shadow-xl p-8 card-hover\"\n            >\n              <div className=\"flex items-center gap-4 mb-6\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"\n                  alt=\"Professional instructor leading corporate training session\"\n                  className=\"w-16 h-16 rounded-full object-cover\"\n                />\n                <div>\n                  <h3 className=\"text-2xl font-bold text-neutral-900\" data-testid=\"instructor-cta-title\">\n                    Become a Instructor\n                  </h3>\n                  <p className=\"text-neutral-600\">\n                    Become an instructor with KnowledgeWaveIndia and share your expertise with the world.\n                  </p>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors\" data-testid=\"instructor-apply-button\">\n                  Apply Now\n                </Button>\n              </Link>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"bg-white rounded-2xl shadow-xl p-8 card-hover\"\n            >\n              <div className=\"flex items-center gap-4 mb-6\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"\n                  alt=\"Students engaged in professional online learning\"\n                  className=\"w-16 h-16 rounded-full object-cover\"\n                />\n                <div>\n                  <h3 className=\"text-2xl font-bold text-neutral-900\" data-testid=\"student-cta-title\">\n                    Become a Student\n                  </h3>\n                  <p className=\"text-neutral-600\">\n                    Embark on your learning journey and become a student at KnowledgeWaveIndia.\n                  </p>\n                </div>\n              </div>\n              <Link href=\"/register\">\n                <Button className=\"btn-secondary text-white px-8 py-3 rounded-lg font-semibold transition-colors\" data-testid=\"student-apply-button\">\n                  Apply Now\n                </Button>\n              </Link>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":11088},"client/src/pages/login.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Eye, EyeOff, Mail, Lock, ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Link } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Login() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.email.trim() || !formData.password.trim()) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please fill in all fields.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    \n    // Simulate login process\n    setTimeout(() => {\n      setIsLoading(false);\n      toast({\n        title: \"Login Successful!\",\n        description: \"Welcome back to Knowledge Wave India.\",\n      });\n      // In a real app, you'd handle authentication here\n    }, 2000);\n  };\n\n  const handleInputChange = (field: keyof typeof formData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-neutral-100 flex items-center justify-center py-12\" data-testid=\"login-page\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center max-w-6xl mx-auto\">\n          {/* Left Side - Branding */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"hidden lg:block\"\n          >\n            <div className=\"relative\">\n              <img\n                src=\"https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=600\"\n                alt=\"Professional online learning environment\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"login-hero-image\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-primary/80 to-transparent rounded-2xl\" />\n              <div className=\"absolute bottom-8 left-8 text-white\">\n                <h2 className=\"text-3xl font-bold mb-2\">Welcome Back!</h2>\n                <p className=\"text-lg opacity-90\">Continue your learning journey with us</p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Right Side - Login Form */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <Card className=\"shadow-2xl\">\n              <CardContent className=\"p-8 lg:p-12\">\n                <div className=\"text-center mb-8\">\n                  <h1 className=\"text-3xl font-bold text-neutral-900 mb-2\" data-testid=\"login-title\">\n                    Sign In\n                  </h1>\n                  <p className=\"text-neutral-600\" data-testid=\"login-subtitle\">\n                    Access your account and continue learning\n                  </p>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"login-form\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                      Email Address\n                    </label>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                      <Input\n                        type=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                        placeholder=\"Enter your email\"\n                        className=\"pl-10 form-input\"\n                        required\n                        data-testid=\"login-email-input\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                      <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={formData.password}\n                        onChange={(e) => handleInputChange(\"password\", e.target.value)}\n                        placeholder=\"Enter your password\"\n                        className=\"pl-10 pr-10 form-input\"\n                        required\n                        data-testid=\"login-password-input\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600\"\n                        data-testid=\"toggle-password-visibility\"\n                      >\n                        {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <label className=\"flex items-center\">\n                      <input type=\"checkbox\" className=\"mr-2\" data-testid=\"remember-me-checkbox\" />\n                      <span className=\"text-sm text-neutral-600\">Remember me</span>\n                    </label>\n                    <a href=\"#\" className=\"text-sm text-primary hover:underline\" data-testid=\"forgot-password-link\">\n                      Forgot password?\n                    </a>\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"w-full btn-primary text-white font-semibold text-lg py-3 group\"\n                    data-testid=\"login-submit-button\"\n                  >\n                    {isLoading ? (\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"spinner\" />\n                        Signing In...\n                      </div>\n                    ) : (\n                      <>\n                        Sign In\n                        <ArrowRight className=\"ml-2 group-hover:translate-x-1 transition-transform\" size={20} />\n                      </>\n                    )}\n                  </Button>\n                </form>\n\n                <div className=\"mt-8\">\n                  <Separator className=\"mb-6\" />\n                  \n                  <div className=\"space-y-4\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full font-semibold py-3\"\n                      data-testid=\"google-login-button\"\n                    >\n                      <img \n                        src=\"https://developers.google.com/identity/images/g-logo.png\" \n                        alt=\"Google\" \n                        className=\"w-5 h-5 mr-2\"\n                      />\n                      Continue with Google\n                    </Button>\n                    \n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full font-semibold py-3\"\n                      data-testid=\"facebook-login-button\"\n                    >\n                      <div className=\"w-5 h-5 mr-2 bg-blue-600 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs font-bold\">f</span>\n                      </div>\n                      Continue with Facebook\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"mt-8 text-center\">\n                  <p className=\"text-neutral-600\">\n                    Don't have an account?{\" \"}\n                    <Link href=\"/register\">\n                      <span className=\"text-primary hover:underline font-semibold\" data-testid=\"register-link\">\n                        Sign up here\n                      </span>\n                    </Link>\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9094},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/package-detail.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Star, Check, Clock, Users, Award, ArrowLeft, ShoppingCart } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Package, Course } from \"@shared/schema\";\n\nexport default function PackageDetail() {\n  const { id } = useParams();\n  const { toast } = useToast();\n\n  const { data: packageData, isLoading, error } = useQuery<Package>({\n    queryKey: [\"/api/packages\", id],\n  });\n\n  const { data: allCourses = [] } = useQuery<Course[]>({\n    queryKey: [\"/api/courses\"],\n  });\n\n  const enrollMutation = useMutation({\n    mutationFn: (data: { userId: string; packageId: string }) => \n      apiRequest(\"POST\", \"/api/enrollments\", data),\n    onSuccess: () => {\n      toast({\n        title: \"Enrollment Successful!\",\n        description: \"You have been enrolled in this package. Check your email for details.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Enrollment Failed\",\n        description: \"Please try again or contact support.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleEnroll = () => {\n    // In a real app, you'd get the user ID from authentication context\n    const userId = \"demo-user-id\";\n    enrollMutation.mutate({ userId, packageId: id! });\n  };\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Package Not Found</h2>\n          <p className=\"text-neutral-600 mb-6\">The package you're looking for doesn't exist.</p>\n          <Link href=\"/packages\">\n            <Button>Back to Packages</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-white\">\n        <div className=\"container mx-auto px-4 pt-32\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-neutral-200 rounded w-48 mb-8\" />\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              <div className=\"lg:col-span-2\">\n                <div className=\"h-64 bg-neutral-200 rounded-2xl mb-6\" />\n                <div className=\"h-8 bg-neutral-200 rounded w-3/4 mb-4\" />\n                <div className=\"h-4 bg-neutral-200 rounded mb-2\" />\n                <div className=\"h-4 bg-neutral-200 rounded w-5/6\" />\n              </div>\n              <div>\n                <div className=\"h-96 bg-neutral-200 rounded-2xl\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!packageData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Package Not Found</h2>\n          <p className=\"text-neutral-600 mb-6\">The package you're looking for doesn't exist.</p>\n          <Link href=\"/packages\">\n            <Button>Back to Packages</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const packageCourses = allCourses.filter(course => \n    packageData.courseIds?.includes(course.id)\n  );\n\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"package-detail-page\">\n      {/* Breadcrumb */}\n      <div className=\"pt-24 pb-8 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <Link href=\"/packages\">\n            <Button variant=\"ghost\" className=\"mb-4\" data-testid=\"back-to-packages\">\n              <ArrowLeft className=\"mr-2\" size={16} />\n              Back to Packages\n            </Button>\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto px-4 pb-20\">\n        <div className=\"grid lg:grid-cols-3 gap-12\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              {/* Package Image */}\n              <div className=\"relative mb-8\">\n                <img\n                  src={packageData.image || \"https://images.unsplash.com/photo-1553484771-371a605b060b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"}\n                  alt={`${packageData.title} package`}\n                  className=\"w-full h-64 lg:h-80 object-cover rounded-2xl shadow-lg\"\n                  data-testid=\"package-detail-image\"\n                />\n                <Badge className=\"absolute top-4 left-4 bg-primary text-white\">\n                  {packageData.category}\n                </Badge>\n                {packageData.originalPrice && packageData.discountedPrice && (\n                  <div className=\"absolute top-4 right-4 bg-secondary text-white px-3 py-2 rounded-full font-semibold\">\n                    Save ₹{(parseFloat(packageData.originalPrice) - parseFloat(packageData.discountedPrice)).toFixed(0)}\n                  </div>\n                )}\n              </div>\n\n              {/* Package Info */}\n              <div className=\"mb-8\">\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <div className=\"flex items-center text-yellow-400\">\n                    <Star className=\"fill-current\" size={20} />\n                    <span className=\"ml-1 font-semibold\" data-testid=\"package-rating\">\n                      {packageData.rating} ({packageData.rating} Reviews)\n                    </span>\n                  </div>\n                  <Badge variant=\"outline\">{packageData.category}</Badge>\n                </div>\n\n                <h1 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"package-title\">\n                  {packageData.title}\n                </h1>\n\n                <p className=\"text-xl text-neutral-600 mb-6\" data-testid=\"package-description\">\n                  {packageData.description || \"Comprehensive learning package designed to enhance your skills and advance your career.\"}\n                </p>\n\n                <div className=\"flex items-center gap-6 text-sm text-neutral-600\">\n                  <div className=\"flex items-center gap-2\">\n                    <Clock size={16} />\n                    <span>Self-paced learning</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Users size={16} />\n                    <span>80K+ enrolled</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Award size={16} />\n                    <span>Certificate included</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Package Features */}\n              {packageData.features && packageData.features.length > 0 && (\n                <div className=\"mb-8\">\n                  <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\" data-testid=\"features-title\">\n                    What's Included\n                  </h2>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    {packageData.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center gap-3\" data-testid={`feature-${index}`}>\n                        <Check className=\"text-accent flex-shrink-0\" size={20} />\n                        <span className=\"text-neutral-700\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Included Courses */}\n              {packageCourses.length > 0 && (\n                <div>\n                  <h2 className=\"text-2xl font-bold text-neutral-900 mb-6\" data-testid=\"courses-title\">\n                    Courses in This Package ({packageCourses.length})\n                  </h2>\n                  <div className=\"space-y-4\">\n                    {packageCourses.map((course, index) => (\n                      <Card key={course.id} className=\"course-card\" data-testid={`course-${course.id}`}>\n                        <CardContent className=\"p-6\">\n                          <div className=\"flex gap-4\">\n                            <img\n                              src={course.thumbnail || \"https://images.unsplash.com/photo-1611224923853-80b023f02d71?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=80\"}\n                              alt={course.title}\n                              className=\"w-20 h-16 object-cover rounded-lg flex-shrink-0\"\n                            />\n                            <div className=\"flex-1\">\n                              <h3 className=\"font-bold text-lg mb-2\">{course.title}</h3>\n                              <p className=\"text-neutral-600 text-sm mb-2 line-clamp-2\">\n                                {course.description || \"Master new skills with this comprehensive course.\"}\n                              </p>\n                              <div className=\"flex items-center gap-4 text-sm text-neutral-500\">\n                                <span>{course.lessons} lessons</span>\n                                <span className=\"flex items-center gap-1\">\n                                  <Star className=\"text-yellow-400 fill-current\" size={12} />\n                                  {course.rating}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n              className=\"sticky top-32\"\n            >\n              <Card className=\"shadow-xl\">\n                <CardContent className=\"p-8\">\n                  <div className=\"text-center mb-6\">\n                    <div className=\"flex items-center justify-center gap-2 mb-2\">\n                      <span className=\"text-4xl font-bold text-primary\" data-testid=\"package-price\">\n                        ₹ {packageData.discountedPrice}\n                      </span>\n                      {packageData.originalPrice && (\n                        <span className=\"text-2xl text-neutral-500 line-through\">\n                          ₹ {packageData.originalPrice}\n                        </span>\n                      )}\n                    </div>\n                    {packageData.originalPrice && packageData.discountedPrice && (\n                      <p className=\"text-accent font-semibold\">\n                        {Math.round(((parseFloat(packageData.originalPrice) - parseFloat(packageData.discountedPrice)) / parseFloat(packageData.originalPrice)) * 100)}% OFF\n                      </p>\n                    )}\n                  </div>\n\n                  <Button\n                    onClick={handleEnroll}\n                    disabled={enrollMutation.isPending}\n                    className=\"w-full btn-secondary text-white font-semibold text-lg py-4 mb-4\"\n                    data-testid=\"enroll-now-button\"\n                  >\n                    {enrollMutation.isPending ? (\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"spinner\" />\n                        Enrolling...\n                      </div>\n                    ) : (\n                      <>\n                        <ShoppingCart className=\"mr-2\" size={20} />\n                        Enroll Now\n                      </>\n                    )}\n                  </Button>\n\n                  <p className=\"text-center text-sm text-neutral-600 mb-6\">\n                    30-day money-back guarantee\n                  </p>\n\n                  <Separator className=\"my-6\" />\n\n                  <div className=\"space-y-4\">\n                    <h3 className=\"font-bold text-lg\">This package includes:</h3>\n                    <div className=\"space-y-3 text-sm\">\n                      <div className=\"flex items-center gap-3\">\n                        <Check className=\"text-accent\" size={16} />\n                        <span>Lifetime access to all courses</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Check className=\"text-accent\" size={16} />\n                        <span>Expert instructor support</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Check className=\"text-accent\" size={16} />\n                        <span>Downloadable resources</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Check className=\"text-accent\" size={16} />\n                        <span>Certificate of completion</span>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <Check className=\"text-accent\" size={16} />\n                        <span>Access on mobile and desktop</span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":13818},"client/src/pages/packages.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Star, Check, ArrowRight, Package } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport type { Package as PackageType } from \"@shared/schema\";\n\nexport default function Packages() {\n  const { data: packages = [], isLoading, error } = useQuery<PackageType[]>({\n    queryKey: [\"/api/packages\"],\n  });\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-neutral-100\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-neutral-900 mb-4\">Failed to Load Packages</h2>\n          <p className=\"text-neutral-600\">Please try again later.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white\" data-testid=\"packages-page\">\n      {/* Hero Section */}\n      <section className=\"gradient-bg pt-32 pb-16 text-white\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-5xl font-bold mb-6\" data-testid=\"packages-hero-title\">\n              Learning <span className=\"text-secondary\">Packages</span>\n            </h1>\n            <p className=\"text-xl opacity-90 max-w-3xl mx-auto\" data-testid=\"packages-hero-subtitle\">\n              Choose from our carefully curated learning packages designed to accelerate your professional growth and skill development.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Packages Grid */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"packages-section-title\">\n              Choose Your Perfect Package\n            </h2>\n            <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"packages-section-subtitle\">\n              Each package is designed to provide comprehensive learning experiences with expert instruction and practical projects.\n            </p>\n          </motion.div>\n\n          {isLoading ? (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"animate-pulse\">\n                  <div className=\"bg-neutral-200 h-48 rounded-t-xl\" />\n                  <div className=\"p-6 space-y-3\">\n                    <div className=\"h-4 bg-neutral-200 rounded\" />\n                    <div className=\"h-6 bg-neutral-200 rounded w-3/4\" />\n                    <div className=\"h-8 bg-neutral-200 rounded\" />\n                    <div className=\"h-10 bg-neutral-200 rounded\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : packages.length === 0 ? (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"text-center py-16\"\n            >\n              <Package className=\"mx-auto h-16 w-16 text-neutral-400 mb-4\" />\n              <h3 className=\"text-2xl font-bold text-neutral-900 mb-2\" data-testid=\"no-packages-title\">\n                No Packages Available\n              </h3>\n              <p className=\"text-neutral-600\" data-testid=\"no-packages-description\">\n                We're working on bringing you amazing learning packages. Check back soon!\n              </p>\n            </motion.div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8\">\n              {packages.map((pkg, index) => (\n                <motion.div\n                  key={pkg.id}\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                >\n                  <Card \n                    className={`package-card card-hover h-full relative ${\n                      pkg.title === \"Tech Wave\" ? \"ring-2 ring-primary\" : \"\"\n                    }`}\n                    data-testid={`package-card-${pkg.id}`}\n                  >\n                    {pkg.title === \"Tech Wave\" && (\n                      <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                        Most Popular\n                      </div>\n                    )}\n                    \n                    <div className=\"relative\">\n                      <img\n                        src={pkg.image || \"https://images.unsplash.com/photo-1553484771-371a605b060b?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"}\n                        alt={`${pkg.title} package bundle`}\n                        className=\"w-full h-48 object-cover rounded-t-xl\"\n                        data-testid={`package-image-${pkg.id}`}\n                      />\n                      {pkg.originalPrice && pkg.discountedPrice && (\n                        <div className=\"absolute top-3 right-3 bg-secondary text-white px-2 py-1 rounded-full text-sm font-semibold\">\n                          Save ₹{(parseFloat(pkg.originalPrice) - parseFloat(pkg.discountedPrice)).toFixed(0)}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-center gap-2 mb-3\">\n                        <Badge className=\"bg-primary text-white\">\n                          {pkg.category}\n                        </Badge>\n                        <div className=\"flex items-center text-yellow-400 text-sm\">\n                          <Star className=\"fill-current\" size={14} />\n                          <span className=\"ml-1\" data-testid={`package-rating-${pkg.id}`}>\n                            ({pkg.rating} Reviews)\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <h4 className=\"font-bold text-xl mb-2\" data-testid={`package-title-${pkg.id}`}>\n                        {pkg.title}\n                      </h4>\n                      \n                      <p className=\"text-neutral-600 text-sm mb-4 line-clamp-3\">\n                        {pkg.description || \"Comprehensive learning package with expert instruction and practical projects.\"}\n                      </p>\n                      \n                      <div className=\"flex items-center gap-2 mb-4\">\n                        <span className=\"text-2xl font-bold text-primary\" data-testid={`package-price-${pkg.id}`}>\n                          ₹ {pkg.discountedPrice}\n                        </span>\n                        {pkg.originalPrice && (\n                          <span className=\"text-lg text-neutral-500 line-through\">\n                            ₹ {pkg.originalPrice}\n                          </span>\n                        )}\n                      </div>\n\n                      {pkg.features && pkg.features.length > 0 && (\n                        <div className=\"mb-6 space-y-2\">\n                          {pkg.features.slice(0, 4).map((feature, idx) => (\n                            <div key={idx} className=\"flex items-center gap-2 text-sm\">\n                              <Check className=\"text-accent flex-shrink-0\" size={14} />\n                              <span>{feature}</span>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                      \n                      <Link href={`/packages/${pkg.id}`}>\n                        <Button \n                          className=\"w-full btn-secondary text-white group\"\n                          data-testid={`package-view-${pkg.id}`}\n                        >\n                          View Package\n                          <ArrowRight className=\"ml-2 group-hover:translate-x-1 transition-transform\" size={16} />\n                        </Button>\n                      </Link>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Why Choose Our Packages */}\n      <section className=\"py-20 bg-neutral-100\">\n        <div className=\"container mx-auto px-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-4xl font-bold text-neutral-900 mb-4\" data-testid=\"why-choose-title\">\n              Why Choose Our Packages?\n            </h2>\n            <p className=\"text-xl text-neutral-600 max-w-2xl mx-auto\" data-testid=\"why-choose-subtitle\">\n              Our learning packages are designed to provide maximum value and comprehensive skill development.\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                title: \"Expert Instruction\",\n                description: \"Learn from industry professionals with years of real-world experience.\",\n                icon: \"👨‍🏫\"\n              },\n              {\n                title: \"Comprehensive Content\",\n                description: \"Complete learning paths that take you from beginner to expert level.\",\n                icon: \"📚\"\n              },\n              {\n                title: \"Practical Projects\",\n                description: \"Build real-world projects that you can showcase in your portfolio.\",\n                icon: \"🚀\"\n              },\n              {\n                title: \"Lifetime Access\",\n                description: \"Access your courses anytime, anywhere with no time restrictions.\",\n                icon: \"♾️\"\n              },\n              {\n                title: \"Certificate of Completion\",\n                description: \"Earn industry-recognized certificates upon successful completion.\",\n                icon: \"🏆\"\n              },\n              {\n                title: \"Community Support\",\n                description: \"Join our active community of learners and get help when you need it.\",\n                icon: \"🤝\"\n              }\n            ].map((benefit, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                className=\"text-center\"\n                data-testid={`benefit-${index}`}\n              >\n                <div className=\"text-4xl mb-4\">{benefit.icon}</div>\n                <h3 className=\"text-xl font-bold text-neutral-900 mb-2\">{benefit.title}</h3>\n                <p className=\"text-neutral-600\">{benefit.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":11598},"client/src/pages/register.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Eye, EyeOff, User, Mail, Lock, ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Link } from \"wouter\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [agreedToTerms, setAgreedToTerms] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validation\n    if (!formData.firstName.trim() || !formData.lastName.trim() || !formData.email.trim() || !formData.password.trim()) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please fill in all required fields.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      toast({\n        title: \"Invalid Email\",\n        description: \"Please enter a valid email address.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (formData.password.length < 8) {\n      toast({\n        title: \"Password Too Short\",\n        description: \"Password must be at least 8 characters long.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      toast({\n        title: \"Passwords Don't Match\",\n        description: \"Please make sure your passwords match.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!agreedToTerms) {\n      toast({\n        title: \"Terms and Conditions\",\n        description: \"Please agree to the terms and conditions.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    \n    // Simulate registration process\n    setTimeout(() => {\n      setIsLoading(false);\n      toast({\n        title: \"Registration Successful!\",\n        description: \"Welcome to Knowledge Wave India. Please check your email to verify your account.\",\n      });\n      // In a real app, you'd handle registration here\n    }, 2000);\n  };\n\n  const handleInputChange = (field: keyof typeof formData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-neutral-100 flex items-center justify-center py-12\" data-testid=\"register-page\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center max-w-6xl mx-auto\">\n          {/* Left Side - Branding */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"hidden lg:block\"\n          >\n            <div className=\"relative\">\n              <img\n                src=\"https://images.unsplash.com/photo-1553484771-cc0d9b8c2b33?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=600\"\n                alt=\"Students engaged in professional online learning\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"register-hero-image\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-secondary/80 to-transparent rounded-2xl\" />\n              <div className=\"absolute bottom-8 left-8 text-white\">\n                <h2 className=\"text-3xl font-bold mb-2\">Start Learning Today!</h2>\n                <p className=\"text-lg opacity-90\">Join thousands of learners advancing their careers</p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Right Side - Registration Form */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <Card className=\"shadow-2xl\">\n              <CardContent className=\"p-8 lg:p-12\">\n                <div className=\"text-center mb-8\">\n                  <h1 className=\"text-3xl font-bold text-neutral-900 mb-2\" data-testid=\"register-title\">\n                    Create Account\n                  </h1>\n                  <p className=\"text-neutral-600\" data-testid=\"register-subtitle\">\n                    Join our community and start your learning journey\n                  </p>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"register-form\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                        First Name\n                      </label>\n                      <div className=\"relative\">\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                        <Input\n                          type=\"text\"\n                          value={formData.firstName}\n                          onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                          placeholder=\"Enter first name\"\n                          className=\"pl-10 form-input\"\n                          required\n                          data-testid=\"register-firstname-input\"\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                        Last Name\n                      </label>\n                      <div className=\"relative\">\n                        <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                        <Input\n                          type=\"text\"\n                          value={formData.lastName}\n                          onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                          placeholder=\"Enter last name\"\n                          className=\"pl-10 form-input\"\n                          required\n                          data-testid=\"register-lastname-input\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                      Email Address\n                    </label>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                      <Input\n                        type=\"email\"\n                        value={formData.email}\n                        onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                        placeholder=\"Enter your email\"\n                        className=\"pl-10 form-input\"\n                        required\n                        data-testid=\"register-email-input\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                      <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={formData.password}\n                        onChange={(e) => handleInputChange(\"password\", e.target.value)}\n                        placeholder=\"Create a password\"\n                        className=\"pl-10 pr-10 form-input\"\n                        required\n                        data-testid=\"register-password-input\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600\"\n                        data-testid=\"toggle-password-visibility\"\n                      >\n                        {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                      </button>\n                    </div>\n                    <p className=\"text-xs text-neutral-500 mt-1\">\n                      Password must be at least 8 characters long\n                    </p>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-neutral-700 mb-2\">\n                      Confirm Password\n                    </label>\n                    <div className=\"relative\">\n                      <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" size={20} />\n                      <Input\n                        type={showConfirmPassword ? \"text\" : \"password\"}\n                        value={formData.confirmPassword}\n                        onChange={(e) => handleInputChange(\"confirmPassword\", e.target.value)}\n                        placeholder=\"Confirm your password\"\n                        className=\"pl-10 pr-10 form-input\"\n                        required\n                        data-testid=\"register-confirm-password-input\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600\"\n                        data-testid=\"toggle-confirm-password-visibility\"\n                      >\n                        {showConfirmPassword ? <EyeOff size={20} /> : <Eye size={20} />}\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-start gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={agreedToTerms}\n                      onChange={(e) => setAgreedToTerms(e.target.checked)}\n                      className=\"mt-1\"\n                      data-testid=\"terms-checkbox\"\n                    />\n                    <p className=\"text-sm text-neutral-600\">\n                      I agree to the{\" \"}\n                      <a href=\"#\" className=\"text-primary hover:underline\">\n                        Terms of Service\n                      </a>{\" \"}\n                      and{\" \"}\n                      <a href=\"#\" className=\"text-primary hover:underline\">\n                        Privacy Policy\n                      </a>\n                    </p>\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"w-full btn-secondary text-white font-semibold text-lg py-3 group\"\n                    data-testid=\"register-submit-button\"\n                  >\n                    {isLoading ? (\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"spinner\" />\n                        Creating Account...\n                      </div>\n                    ) : (\n                      <>\n                        Create Account\n                        <ArrowRight className=\"ml-2 group-hover:translate-x-1 transition-transform\" size={20} />\n                      </>\n                    )}\n                  </Button>\n                </form>\n\n                <div className=\"mt-8\">\n                  <Separator className=\"mb-6\" />\n                  \n                  <div className=\"space-y-4\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full font-semibold py-3\"\n                      data-testid=\"google-register-button\"\n                    >\n                      <img \n                        src=\"https://developers.google.com/identity/images/g-logo.png\" \n                        alt=\"Google\" \n                        className=\"w-5 h-5 mr-2\"\n                      />\n                      Sign up with Google\n                    </Button>\n                    \n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full font-semibold py-3\"\n                      data-testid=\"facebook-register-button\"\n                    >\n                      <div className=\"w-5 h-5 mr-2 bg-blue-600 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs font-bold\">f</span>\n                      </div>\n                      Sign up with Facebook\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"mt-8 text-center\">\n                  <p className=\"text-neutral-600\">\n                    Already have an account?{\" \"}\n                    <Link href=\"/login\">\n                      <span className=\"text-primary hover:underline font-semibold\" data-testid=\"login-link\">\n                        Sign in here\n                      </span>\n                    </Link>\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":13848},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}